---
title: Bootstrapping a Galera Cluster
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic describes the procedure for recovering a terminated Elastic Runtime cluster using a process known as bootstrapping.

## <a id='when'></a>When to Bootstrap

You must bootstrap a cluster that loses quorum. A cluster loses quorum when less than half of the nodes can communicate with each other for longer than the configured grace period. If a cluster does not lose quorum, individual unhealthy nodes automatically rejoin the cluster after resolving the error, restarting the node, or restoring connectivity.

You can detect lost quorum through the following symptoms:

* All nodes appear "Unhealthy" on the proxy dashboard, viewable at `proxy-BOSH-JOB-INDEX.p-mysql.YOUR-SYSTEM-DOMAIN`:
  <img src="https://docs.pivotal.io/p-mysql/1-8/quorum-lost.png">
* All responsive nodes report the value of `wsrep_cluster_status` as `non-Primary`:

    <pre class="terminal">
    mysql> SHOW STATUS LIKE 'wsrep_cluster_status';
    +----------------------+-------------+
    | Variable_name        | Value       |
    +----------------------+-------------+
    | wsrep_cluster_status | non-Primary |
    +----------------------+-------------+
    </pre>

* All responsive nodes respond with `ERROR 1047` when queried with most statement types:

    <pre class="terminal">
    mysql> select * from mysql.user;
    ERROR 1047 (08S01) at line 1: WSREP has not yet prepared node for application use
    </pre>

See the [Cluster Scaling, Node Failure, and Quorum](../../p-mysql/1-8/cluster-behavior.html) topic for more details about determining cluster state.

Follow the steps below to recover a cluster that has lost quorum.

## <a id='manifest'></a>Step 1: Choose the Correct Manifest

<p class='note'><strong>Note</strong>: This topic requires you to run commands from the <a href="http://docs.pivotal.io/pivotalcf/customizing/index.html">Ops Manager Director</a> using the BOSH CLI. Refer to the <a href="http://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#prepare">Advanced Troubleshooting with the BOSH CLI</a> topic for more information.</p>

1. Log into the BOSH director by running `bosh target DIRECTOR-URL` followed by `bosh login USERNAME PASSWORD`.

1. Run `bosh deployments`.

    <pre class="terminal">
    $ bosh deployments
    Acting as user 'director' on 'p-bosh-30c19bdd43c55c627d70'

    +-------------------------+-------------------------------+----------------------------------------------+--------------+
    | Name                    | Release(s)                    | Stemcell(s)                                  | Cloud Config |
    +-------------------------+-------------------------------+----------------------------------------------+--------------+
    | cf-e82cbf44613594d8a155 | cf-autoscaling/28             | bosh-aws-xen-hvm-ubuntu-trusty-go_agent/3140 | none         |
    |                         | cf-mysql/23                   |                                              |              |
    |                         | cf/225                        |                                              |              |
    |                         | diego/0.1441.0                |                                              |              |
    |                         | etcd/18                       |                                              |              |
    |                         | garden-linux/0.327.0          |                                              |              |
    |                         | notifications-ui/10           |                                              |              |
    |                         | notifications/19              |                                              |              |
    |                         | push-apps-manager-release/397 |                                              |              |
    +-------------------------+-------------------------------+----------------------------------------------+--------------+
    | p-mysql                 | p-mysql                       |                                              |              |
    +-----------------------------------------------------------------------------------------------------------------------+
    </pre>

1. Download the manifest.

    <pre class="terminal">
    $ bosh download manifest p-mysql /tmp/p-mysql.yml
    Acting as user 'director' on deployment [...]
    Deployment manifest saved to `/tmp/p-mysql.yml'
    </pre>

1. Set BOSH to use the deployment manifest you downloaded.

    <pre class="terminal">
    $ bosh deployment /tmp/p-mysql.yml
    </pre>

## <a id="bootstrap"></a>Step 2: Bootstrap ##

 To determine which set of instructions to follow, you must determine the state of your Virtual Machines (VMs).

- If the output of `bosh instances` shows the state of the jobs as `failing`, then follow the steps in [Scenario 1](#cluster-disrupted) below.
- If the output of `bosh instances` shows the state of the jobs as `unknown/unknown`, then follow the steps in [Scenario 2](#vms-terminated).

### <a id="cluster-disrupted"></a>Scenario 1: Virtual Machines Running, Cluster Disrupted ###

In this scenario, nodes are up and running, but the cluster has been disrupted.

<p class="note"><strong>Note</strong>: The following steps are prone to user error and can result in lost data if followed incorrectly.</p>

1. SSH to each node in the cluster and, as root, shut down the `mariadb` process. To SSH into BOSH-deployed VMs, see the [Advanced Troubleshooting with the BOSH CLI](../pivotalcf/customizing/trouble-advanced.html) topic.

    <pre class="terminal">
    $ monit stop mariadb_ctrl
    </pre>

    Re-bootstrapping the cluster will not be successful unless all other nodes have been shut down.

1. Choose a node to bootstrap by locating the node with the highest transaction sequence number (`seqno`). You can obtain the `seqno` of a stopped node in one of two ways:
    - If a node shut down gracefully, the `seqno` is in the Galera state file of the node.
    <pre class="terminal">
    $ cat /var/vcap/store/mysql/grastate.dat | grep 'seqno:'
    </pre>
    - If the node crashed or was killed, the `seqno` in the Galera state file of the node is `-1`. In this case, the `seqno` may be recoverable from the database.
        1. Run the following command to start up the database, log the recovered sequence number, and exit.
        <pre class="terminal">
        $ /var/vcap/packages/mariadb/bin/mysqld --wsrep-recover
        </pre>
        1. Scan the error log for the recovered sequence number. The last number after the group id (`uuid`) is the recovered `seqno`:
        <pre class="terminal">
        $ grep "Recovered position" /var/vcap/sys/log/mysql/mysql.err.log | tail -1
        150225 18:09:42 mysqld_safe WSREP: Recovered position e93955c7-b797-11e4-9faa-9a6f0b73eb46:15
        </pre>
        If the node never connected to the cluster before crashing, it may not have a group id (`uuid` in `grastate.dat`). In this case, you cannot recover the `seqno`. Unless all nodes crashed this way, do not choose this node for bootstrapping.

1. Choose the node with the highest `seqno` value as the bootstrap node. If all nodes have the same `seqno`, you can choose any node as the bootstrap node.

    <p class="note"><strong>Note:</strong> Only perform these bootstrap commands on the node with the highest <code>seqno</code>. Otherwise, the node with the highest <code>seqno</code> will be unable to join the new cluster unless its data is abandoned. Its <code>mariadb</code> process will exit with an error. See the <a href="../../p-mysql/1-8/cluster-behavior.html">Cluster Scaling, Node Failure, and Quorum</a> topic for more details on intentionally abandoning data.</p>

1. On the bootstrap node, update the state file and restart the `mariadb` process.

    <pre class="terminal">
    $ echo -n "NEEDS_BOOTSTRAP" > /var/vcap/store/mysql/state.txt
    $ monit start mariadb_ctrl
    </pre>

1. Check that the `mariadb` process has started successfully.

    <pre class="terminal">
    $ watch monit summary
    </pre>

    It can take up to ten minutes for `monit` to start the `mariadb` process.

1. Once the bootstrapped node is running, start the `mariadb` process on the remaining nodes using `monit`.
  - If the Interruptor is enabled, you must additionally run this command before moving to the next step
      <pre class="terminal">
      $ touch /var/vcap/sys/run/galera-healthcheck/enable_sst
      </pre>

    Start the mariadb process:
    <pre class="terminal">
    $ monit start mariadb_ctrl
    </pre>

1. Verify that the new nodes have successfully joined the cluster. The following command displays the total number of nodes in the cluster:

    <pre class="terminal">
    mysql> SHOW STATUS LIKE 'wsrep_cluster_size';
    </pre>



### <a id="vms-terminated"></a>Scenario 2: Virtual Machines Terminated or Lost ###

In this scenario, severe circumstances such as power failure have terminated all of your VMs. You need to recreate the VMs before you can recover the cluster.

1. If you enabled the [VM Resurrector](http://docs.pivotal.io/pivotalcf/customizing/resurrector.html#enabling) in Ops Manager, the system detects the terminated VMs and automatically attempts to recreate them. Run `bosh tasks recent --no-filter` to see the `scan and fix` job run by the VM Resurrector.

    <pre class="terminal">
    $ bosh tasks recent --no-filter
    +-----+------------+-------------------------+----------+--------------------------------------------+---------------------------------------------------+
    | #   | State      | Timestamp               | User     | Description                                | Result                                            |
    +-----+------------+-------------------------+----------+--------------------------------------------+---------------------------------------------------+
    | 123 | queued     | 2016-01-08 00:18:07 UTC | director | scan and fix                               |                                                   |
    </pre>

    If you have not enabled the VM Resurrector, run the BOSH cloud check command `bosh cck` to delete any placeholder VMs. When prompted, choose `Delete VM reference` by entering `3`.

    <pre class="terminal">
    $ bosh cck

    Acting as user 'director' on deployment 'cf-e82cbf44613594d8a155' on 'p-bosh-30c19bdd43c55c627d70'
    Performing cloud check...

    Director task 34
      Started scanning 22 vms
      Started scanning 22 vms > Checking VM states. Done (00:00:10)
      Started scanning 22 vms > 19 OK, 0 unresponsive, 3 missing, 0 unbound, 0 out of sync. Done (00:00:00)
         Done scanning 22 vms (00:00:10)

      Started scanning 10 persistent disks
      Started scanning 10 persistent disks > Looking for inactive disks. Done (00:00:02)
      Started scanning 10 persistent disks > 10 OK, 0 missing, 0 inactive, 0 mount-info mismatch. Done (00:00:00)
         Done scanning 10 persistent disks (00:00:02)

    Task 34 done

    Started   2015-11-26 01:42:42 UTC
    Finished  2015-11-26 01:42:54 UTC
    Duration  00:00:12

    Scan is complete, checking if any problems found.

    Found 3 problems

    Problem 1 of 3: VM with cloud ID `i-afe2801f' missing.
        1. Skip for now
        2. Recreate VM
        3. Delete VM reference
    Please choose a resolution [1 - 3]: 3

    Problem 2 of 3: VM with cloud ID `i-36741a86' missing.
        1. Skip for now
        2. Recreate VM
        3. Delete VM reference
    Please choose a resolution [1 - 3]: 3

    Problem 3 of 3: VM with cloud ID `i-ce751b7e' missing.
        1. Skip for now
        2. Recreate VM
        3. Delete VM reference
    Please choose a resolution [1 - 3]: 3

    Below is the list of resolutions you've provided
    Please make sure everything is fine and confirm your changes

        1. VM with cloud ID `i-afe2801' missing.
         Delete VM reference

        2. VM with cloud ID `i-36741a86' missing.
         Delete VM reference

        3. VM with cloud ID `i-ce751b7e' missing.
         Delete VM reference

    Apply resolutions? (type 'yes' to continue): yes
    Applying resolutions...

    Director task 35
      Started applying problem resolutions
      Started applying problem resolutions > missing_vm 11: Delete VM reference. Done (00:00:00)
      Started applying problem resolutions > missing_vm 27: Delete VM reference. Done (00:00:00)
      Started applying problem resolutions > missing_vm 26: Delete VM reference. Done (00:00:00)
         Done applying problem resolutions (00:00:00)

    Task 35 done

    Started   2015-11-26 01:47:08 UTC
    Finished  2015-11-26 01:47:08 UTC
    Duration  00:00:00
    Cloudcheck is finished
    </pre>

1. Run `bosh instances` and examine the output. The VMs transition from `unresponsive agent` to `starting`. Ultimately, two appear as `failing`. Do not proceed to the next step until all three VMs are in the `starting` or `failing` state.

    <pre class="terminal">
    $ bosh instances
    [...]
    +--------------------------------------------------+----------+------------------------------------------------+------------+
    | mysql-partition-e97dae91e44681e0b543/0           | starting | mysql-partition-e97dae91e44681e0b543           | 192.0.2.60 |
    | mysql-partition-e97dae91e44681e0b543/1           | failing  | mysql-partition-e97dae91e44681e0b543           | 192.0.2.61 |
    | mysql-partition-e97dae91e44681e0b543/2           | failing  | mysql-partition-e97dae91e44681e0b543           | 192.0.2.62 |
    +--------------------------------------------------+----------+------------------------------------------------+------------+
    </pre>


1. Complete the steps for [Scenario 1](#cluster-disrupted).

1. Run `bosh instances` and examine the output to confirm that the bootstrap was successful. Some instances may still appear as `failing`.
