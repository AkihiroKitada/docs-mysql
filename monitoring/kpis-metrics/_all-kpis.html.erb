<%= partial 'monitoring/kpis', locals: {
    kpis: [
      {
        metric: '/available',
        description:<<~DESC,
         MySQL Server is currently responding to requests, which indicates if the component is available.<br><br>
         <strong>Use</strong>: If the server does not emit heartbeats, it is offline.
         <br><br>
         <strong>Origin</strong>: Doppler/Firehose<br>
         <strong>Type</strong>: boolean<br>
         <strong>Frequency</strong>: 30 s
         
         DESC
         measurement:'Average over last 5 minutes',
         alert: <<~DESC,
           <strong>Yellow warning</strong>: N/A<br>
           <strong>Red critical</strong>: &lt; 1
         DESC
         response: <<~DESC,
         Check the MySQL Server logs for errors.
         You can find the instance by targeting your MySQL deployment with BOSH
         and inspecting logs for the instance.
         For more information,
         see <a href="./troubleshoot.html#failing-jobs">Failing Jobs and Unhealthy Instances</a>.
         <br><br>
        If your service plan is an highly available (HA) cluster, you can also
        run <code>mysql-diag</code> to checklogs for errors.
        DESC
        id:'server-heartbeat',
        header: 'Server Availability'
      },
      
      {
        metric: '/system/persistent_disk_used_percent',
        description:<<~DESC,
        The percentage of disk used on the persistent file system. <br ><br>
        <strong>Use</strong>: MySQL cannot function correctly if there is not sufficient
        free space on the file systems. Use these metrics to ensure that you
         have disks large enough for your user base.<br>
        <strong>Origin</strong>: Doppler/Firehose<br>
        <strong>Type</strong>: Percent<br>
        <strong>Frequency</strong>: 30 s (default)<br>
         DESC
         
         measurement:'Maximum of persistent disk used of all of
           nodes',
         alert: <<~DESC,
         <strong>Single Node and Leader Follower:</strong>
           <ul>
         <li><strong>Yellow warning:</strong> > 25%</li>
         <li><strong>Red critical:</strong> > 30%</li>
         </ul>
       <strong>Highly Available Cluster:</strong>
       <ul>
         <li><strong>Yellow warning:</strong> > 80%</li>
         <li><strong>Red critical:</strong> > 90%</td></li>
       </ul>   
         DESC
         
         response: 'Upgrade the service instance to a plan with larger disk capacity.',
         id:'persistent-used',
         header: 'Persistent Disk Used'
      },
      
      
      {      
        metric: '/system/ephemeral_disk_used_percent' ,
        description: <<~DESC,
          The percentage of disk used on the ephemeral file system. <br ><br>
          <strong>Use</strong>: MySQL cannot function correctly if there is not sufficient
          free space on the file systems. Use these metrics to ensure that you
           have disks large enough for your user base.<br>
          <strong>Origin</strong>: Doppler/Firehose<br>
          <strong>Type</strong>: Percent<br>
          <strong>Frequency</strong>: 30 s (default)<br>
        DESC

        measurement: 	'Maximum ephemeral disk used of all nodes',
        alert: <<~DESC,
          <strong>Yellow warning</strong>: > 80% <br>
          <strong>Red critical</strong>: > 95%
        DESC
        response: 'Upgrade the service instance to a plan with larger disk capacity.',
        id: 'ephemeral-used',
        header: 'Ephemeral Disk Used'
    },
    
    {
      metric: '/net/connections' ,
      description: <<~DESC,
        The rate of connections to the server, shown as connections per second.<br><br>

        <strong>Use</strong>: If the number of connections drastically changes or if apps are unable to connect, there might be  a network or app issue.<br>
        <strong>Origin</strong>: Doppler/Firehose<br>
        <strong>Type</strong>: count<br>
        <strong>Frequency</strong>: 30 s
      DESC

      measurement: 	'(Number of connections / Max connections) over last 1 minute',
      alert: <<~DESC,
        <strong>Yellow warning</strong>: &gt; 80 <br>
        <strong>Red critical</strong>: &gt; 90
      DESC
      response: 'When approaching 100% of max connections, apps may be experiencing times when they cannot connect to the database.
          The connections/second for a service instance vary based on application instances and app utilization.
          If this metric is met or exceeded for an extended period of time,
          monitor app usage to ensure everything is behaving as expected.',
      id: 'connections',
      header: 'Connections'
    },
    
    {
      metric: '/performance/questions' ,
      description: <<~DESC,
        The rate of statements executed by the server, shown as queries per second.<br><br>

        <strong>Use</strong>: The server should always be processing some queries,
        if just as part of the internal automation.
        <br><br>
        <strong>Origin</strong>: Doppler/Firehose<br>
        <strong>Type</strong>: count<br>
        <strong>Frequency</strong>: 30 s
      DESC

      measurement: 	'Average over last 2 minutes',
      alert: <<~DESC,
        <strong>Yellow warning</strong>: 0 for 90 s<br>
        <strong>Red critical</strong>: 0 for 120 s
      DESC
      response: 'Investigate the MySQL server logs, such as the audit log, to understand
        why query rate changed and determine appropriate action.',
      id: 'questions',
      header: 'Questions'
    },
    
    {
      metric: 'broker/disk_allocated_service_plans',
      description:<<~DESC,
       The number of megabytes allocated by the broker for all service plans, current and allocated.<br><br>
       <strong>Use</strong>: The service broker does not allow new service instances to be created if there is not sufficient unreserved space remaining on the persistent disk. 
       <br><br>
       <strong>Origin</strong>: Doppler/Firehose<br>
       <strong>Type</strong>: MB<br>
       <strong>Frequency</strong>: 30 s
       
       DESC
       measurement:'disk allocated / persistent disk size',
       alert: <<~DESC,
         <strong>Yellow warning</strong>:< 80%<br>
         <strong>Red critical</strong>: < 90%
       DESC
       response: 'Audit plan allocation by your users and recommend deletion of unused service instances.',
       id: 'service-plans',
       header: 'Service Plans Allocated'
    },
    
    {
      metric: '/galera/wsrep_ready' ,
      description: <<~DESC,
        Shows whether each cluster node can accept queries. Returns only 0 or 1.
         When this metric is 0, almost all queries to that node fail with the
         error:<br> <code>ERROR 1047 (08501) Unknown Command</code><br><br>
         <strong>Use:</strong> Discover when nodes of a cluster have been unable to
         communicate and accept transactions.
         <br><br><strong>Origin:</strong> Doppler/Firehose<br>
         <strong>Type:</strong> boolean<br><strong>Frequency:</strong> 30 s (default)
      DESC
      measurement: 	'Average of values of each cluster node, over the last 5 minutes',
      alert: <<~DESC,
        <strong>Yellow warning:</strong> < 1 <br> <strong>Red critical:</strong> 0 (cluster is down)
      DESC
      response: <<~DESC,
        <ul>
          <li> Run <code>mysql-diag</code> and check the MySQL Server logs for errors.</li>
          <li> Make sure there has been no infrastructure event that affects intra-cluster
            communication.</li>
          <li> Ensure that <code>wsrep_ready</code> has not been set to off by using the
             query:<br>
             <code>SHOW STATUS LIKE 'wsrep_ready';</code>. </li>
      DESC
      id: 'wsrep-ready',
      header: 'Highly Available Cluster WSREP Ready'
      
    },
    
    {  
      metric: '/galera/wsrep_cluster_size' ,
      description: <<~DESC,
        The number of cluster nodes with which each node is communicating normally.
        <br><br> <strong>Use:</strong> When running in a multi-node configuration, this metric
        indicates if each member of the cluster is communicating normally with all
        other nodes.<br><br><strong>Origin:</strong> Doppler/Firehose<br> <strong>Type:</strong> count
        <br><strong>Frequency:</strong> 30 s (default)
      DESC

      measurement: 	'(Average of the values of each node / cluster size), over the last 5 minutes',
      alert: <<~DESC,
        <strong>Yellow warning:</strong> < 3 (availability compromised)<br>
        <strong>Red critical:</strong> < 1 (cluster unavailable)
      DESC
      response: <<~DESC,
        Run <code>mysql-diag</code> and check the MySQL Server logs for errors.
      DESC
      id: 'wsrep-cluster-size',
      header: 'Highly Available Cluster WSREP Cluster Size'
    },
    
    {
      metric: '/galera/wsrep_cluster_status' ,
      description: <<~DESC,
         Shows the primary status of the cluster component that the node is in.
         <br>Values are:
         <ul>
           <li> <code>Primary</code>: Node has a quorum.</li>
           <li> <code>Non-primary</code>:  Node has lost a quorum. </li>
           <li> <code>Disconnected</code>: Node is unable to connect to other nodes.</li>
          </ul>
          <strong>Use:</strong> Any value other than <code>Primary</code> indicates that the node is
         part of a nonoperational component. This occurs in cases of multiple
         membership changes that result in a loss of quorum.
         <br><br><strong>Origin:</strong> Doppler/Firehose
         <br> <strong>Type:</strong> integer (see above)
         <br><strong>Frequency:</strong> 30 s (default)
      DESC

      measurement: 	'Sum of each of the nodes, over the last 5 minutes',
      alert: <<~DESC,
        <strong>Yellow warning:</strong> < 3 <br>
        <strong>Red critical:</strong> < 1
      DESC
      response: <<~DESC,
        <ul>
          <li>Check node status to ensure that they are all in working order and able
         to receive write-sets</li>
         <li> Run <code>mysql-diag</code> and check the MySQL Server logs for errors</li>
         </ul>
      DESC
      
      id: 'wsrep-cluster-status',
      header: 'Highly Available Cluster WSREP Cluster Status'
    }
    
  ]
  
} %>  
