---
title: Preparing for TLS
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic describes how to provide an existing CA certificate to BOSH CredHub
and how to generate a new CA certificate with BOSH CredHub, if you do not already have one.

If you are using <%= vars.ops_manager %> v2.6 or later and you want to use the certificate
provided by <%= vars.ops_manager %>, then you can skip this page.

<p class="note"><strong>Note</strong>: If you are using <%= vars.single_leader_plan_lc %>,
	you must configure TLS.
</p>

<p class="note warning"><strong>Warning:</strong> The procedures in this topic involve restarting
	all of the VMs in your <%= vars.platform_name %> deployment to apply a CA certificate. The
	operation can take a long time to complete.
</p>

##<a id='overview'></a> Overview

Enabling TLS provisions a MySQL server with a certificate so that apps and
clients can establish an encrypted connection with the data service.

The certificate deployed with the MySQL server is a **server certificate**.
The server certificate is generated by **CredHub**, a component designed for
centralized credential management in <%= vars.platform_name %>,
co-located on the BOSH Director.

CredHub generates the server certificate with a **Certificate Authority (CA) certificate**.
The CA certificate must be provided to CredHub by the operator or generated by CredHub.

Apps and clients use the public component of the CA certificate to validate that
a server certificate has been generated by a known, trusted CA.
Apps and clients that communicate with the MySQL server must have access to the
public component of the CA certificate
to validate that the server certificate can be trusted.

<%= vars.platform_name %> distributes the public component of the CA certificate to apps in two ways:

* <%= vars.platform_name %> provisions a copy of the CA certificate in the trusted store of each
container's operating system.
  Apps written in Java and Spring automatically discover the CA certificate in
	the trusted store.
* <%= vars.platform_name %> supplies the public CA certificate in an environment variable called
`VCAP_SERVICES` that exists in every container.
  Apps not written in Java and Spring can retrieve the public component of the
	CA certificate from `VCAP_SERVICES`
  and use it to establish an encrypted connection with the data service.

##<a id='workflow'></a> Workflow

The following workflow describes enabling TLS for <%= vars.product_short %>:

1. An operator provides a CA certificate to CredHub. If you are using <%= vars.single_leader_plan_lc %>, you must do this for both foundations. See [Provide or Generate a CA Certificate](#provide-generate-pcf) below.
1. An operator enables TLS in the tile configuration while installing <%= vars.product_short %>.
If you are using <%= vars.single_leader_plan_lc %>, you must do this for both foundations. See [Configure Security](./install-config.html#security).
1. A developer enables TLS for an existing service instance. See [Using TLS](./using-tls.html).
1. A developer modifies their app to communicate securely with the MySQL server:
   * For Java and Spring apps, see [Activate TLS for Java and Spring Apps](using-tls.html#activate-spring).
   * or all other apps, see [Activate TLS for Non-Spring Apps](using-tls.html#activate-non-spring]).


<p class="note"><strong>Note</strong>: An operator must also rotate the CA
	certificate if it expires or if it becomes compromised.
For information about how to rotate your CA certificate, see
<a href="rotating-ca.html">Rotating CA Certificates</a>.
</p>

##<a id="provide-generate-pcf"></a> Generate and Add a CA Certificate

Follow the procedures below to generate and add a CA certificate.

<p class="note"><strong>Note:</strong> If you are using <%= vars.ops_manager_full %> v2.6 or later,
you do not need to generate the CA certificate because the certificate is provided by <%= vars.ops_manager %>.
The steps that <%= vars.ops_manager %> v2.6 users can skip are marked below.</p>


###<a id='credhub-creds'></a> Find the CredHub Credentials in <%= vars.ops_manager %>

You need the BOSH CredHub client name and client secret to complete the
[Add the CA Certificate](#add-ca-cert) procedure below.

To find the BOSH CredHub client name and client secret, do the following:

1. In the <%= vars.ops_manager %> Installation Dashboard, click the BOSH Director tile.
1. Click the **Credentials** tab.
1. In the BOSH Director section, click the link to the BOSH Commandline Credentials.
	![CredHub Credentials](credhub-creds.png)
1. Record the values for `BOSH_CLIENT` and `BOSH_CLIENT_SECRET`.


	Here is an example of the credentials page:

	```
	{"credential":"BOSH_CLIENT=ops_manager
	BOSH_CLIENT_SECRET=abCdE1FgHIjkL2m3n-3PqrsT4EUVwXy5
	BOSH_CA_CERT=/var/tempest/workspaces/default/root_ca_certificate
	BOSH_ENVIRONMENT=10.0.0.5 bosh "}
	```

  The `BOSH_CLIENT` is the BOSH CredHub client name and the `BOSH_CLIENT_SECRET` is
	the BOSH CredHub client secret.


###<a id='add-ca-cert'></a> Add the CA Certificate

<!-- UPDATE PROCEDURE -->

To generate and add the CA Certificate to <%= vars.ops_manager %>, do the following:

1. From the <%= vars.ops_manager %> VM, set the API target of the CredHub CLI to your BOSH
CredHub server by running the following command:

    ```
    credhub api https://BOSH-DIRECTOR:8844 --ca-cert=/var/tempest/workspaces/default/root_ca_certificate
    ```
    <br>
    Where `BOSH-DIRECTOR` is the IP address of the BOSH Director VM.
    <br><br>
    For example:
    <pre class="terminal">
    $ credhub api http<span>s:</span>//10.0.0.5:8844 --ca-cert=/var/tempest/workspaces/default/root_ca_certificate
    </pre>

2. Log in to CredHub by running the following command:

    ```
    credhub login --client-name=CREDHUB-CLIENT-NAME --client-secret=CREDHUB-CLIENT-SECRET
    ```
    Where:<br>
    * `CREDHUB-CLIENT-NAME` is the value you recorded for `BOSH_CLIENT` in
		[Find the CredHub Credentials](#credhub-creds) above.
    * `CREDHUB-CLIENT-SECRET` is the value you recorded for `BOSH_CLIENT_SECRET` in
		[Find the CredHub Credentials](#credhub-creds) above.
    <br><br>
    For example:
    <pre class="terminal">
    $ credhub login \
    	--client-name=credhub \
    	--client-secret=abcdefghijklm123456789
    </pre>

3. If you are using <%= vars.ops_manager %> v2.6 or later, go to step 5.
   Otherwise, find out if a services CA certificate already is present by running the following command:

  	```
  	credhub get --name="/services/tls_ca"
  	```
  If you already have a certificate at the `services/tls_ca` path, go to step 5.

4. Use the CredHub CLI to generate a CA certificate or provide an existing one.
    <p class="note"><strong>Note</strong>: Your <%= vars.platform_name %> deployment can have
			multiple CA certificates.
       Pivotal recommends a dedicated CA certificate for services.
		 </p>
	* If you do not have a CA certificate, use the CredHub CLI to generate one.
          Enter the following command:
			<pre class="terminal">$ credhub generate \
				--name="/services/tls\_ca" \
				--type="certificate" \
				--is-ca \
	            --common-name="rootCA" \
				</pre>

		<p class=note><strong>Note:</strong> When you run the above command,
			the generated certificate is valid for one year by default.
		You can use the <code>--duration</code> flag to set the validity period to a specific time.
		For example, if you add <code>--duration=1825</code> to the above command,
		the generated certificate is valid for five years.</p>
	* If you have an existing CA certificate that you want to use, create
	a new file called `root.pem` with the contents of the certificate.
	  Then run the following command, specifying the path to `root.pem` and
		the private key for the certificate:
	    <pre class="terminal">$ credhub set \
	        --name="/services/tls_ca" \
	        --type="certificate" \
	        --certificate=./root.pem \
	        --private=ERKSOSMFF...</pre>

5. Use the BOSH CLI to extract the `certificate` portion from the CA certificate and print it
    by running the following command:

    ```
    bosh int <(credhub get \
    --name=/services/tls_ca) \
    --path /value/certificate
    ```
6. Copy the output.
7. Navigate to the <%= vars.ops_manager %> **Installation Dashboard** and select the BOSH Director tile.
Click **Security**.
1. Paste the contents of the CA certificate into **Trusted Certificates** and
 click **Save**.<br> If you using <%= vars.single_leader_plan_lc %>, you must
 paste the CA certificates for both foundations into **Trusted Certificates**.

9. After preparing your environment for TLS, you must enable TLS in the tile
configuration while installing <%= vars.product_short %>:
    * **Existing Installation**: If you have already installed the <%= vars.product_short %>
		tile, perform the procedures
    in [Configure TLS](install-config.html#tls) to enable TLS in the **Security**
		section of the tile. Then return to the <%= vars.ops_manager %> Installation Dashboard to apply changes:<br><br>
			    	1. Click **Review Pending Changes**.
			    	For more information about this <%= vars.ops_manager %> page, see
			    	[Reviewing Pending Product Changes](https://docs.pivotal.io/pivotalcf/customizing/review-pending-changes.html).<br><br>
						2. Enable the checkboxes next to the <%= vars.app_runtime_full %> tile and the MySQL tile.<br><br>
						3. Click **Apply Changes**.<br><br>

        This restarts all the VMs in your <%= vars.platform_name %> deployment and applies your
				CA certificate.<br><br>
    * **New Installation**: If you have not yet installed the <%= vars.product_short %> tile,
		perform all of
    the procedures in [Installing and Configuring <%= vars.product_short %>](install-config.html).
    Then return to the <%= vars.ops_manager %> Installation Dashboard to apply changes:<br><br>
						1. Click **Review Pending Changes**.<br><br>
						2. Enable the checkboxes next to the <%= vars.app_runtime %> tile and the MySQL tile.<br><br>
						3. Click **Apply Changes**.<br><br>

        This deploys <%= vars.product_short %>, restarts all the VMs in your <%= vars.platform_name %> deployment,
        and applies your CA certificate.
        <p class="note warning"><strong>WARNING</strong>: Restarting all of the
					VMs in your <%= vars.platform_name %> deployment to apply a CA certificate takes a
					long time to complete.</p>
