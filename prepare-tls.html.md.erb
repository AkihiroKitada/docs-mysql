---
title: Preparing for TLS
owner: MySQL
---

This topic describes how to provide a CA certificate to BOSH CredHub.
If you want to enable TLS for MySQL for Pivotal Cloud Foundry (PCF),
you must perform the procedures in this topic before installing and configuring the tile.

##<a id='overview'></a> Overview

Enabling TLS provisions a MySQL server with a certificate so that apps and clients can establish an encrypted connection with the data service.

The certificate deployed with the MySQL server is a **server certificate**.
The server certificate is generated by **CredHub**, a component designed for centralized credential management in PCF,
colocated on the BOSH Director.

CredHub generates the server certificate with a **Certificate Authority (CA) certificate**.
The CA certificate must be provided to CredHub by the operator, or generated by CredHub.

A CA certificate validates that a server certificate has been generated by a known, trusted CA.
Apps and clients that communicate with the MySQL server must have access to the public component of the CA certificate
in order to validate that the server certificate can be trusted.

PCF distributes the public component of the CA to apps in two ways:

* PCF provisions a copy of the CA certificate in the trusted store of each container's operating system.
  Apps written in Java and Spring automatically discover the CA certificate in the trusted stored.
* PCF supplies the public CA certificate in an environment variable called `VCAP_SERVICES` that exists in every container.
  Apps not written in Java and Spring can retrieve the public component of the CA certificate from `VCAP_SERVICES`
  and use it to establish an encrypted connection with the data service.

##<a id='workflow'></a> Workflow

The following workflow describes enabling TLS for MySQL for PCF:

<ol>
<li>An operator provides a CA certificate to CredHub by performing the procedures in this topic.
Consult the following table:
    <table>
    <tr>
    <th>If PCF version is...</th>
    <th>Then perform the following procedures:</th>
    </tr>
    <tr>
    <td>1.12</td>
    <td><ol><li><a href="#uaa">Create UAA Client</a></li>
    <li><a href="#credhub-cli">Provide the CA Certificate</a></li></ol></td>
    </tr>
    <tr>
    <td>2.x</td>
    <td><a href="#provide-pcf-2-0">Provide a CA Certificate in PCF v2.x</a></td>
    </tr>
    </table></li>   
<li>An operator enables TLS in the tile configuration while installing MySQL for PCF.
    See [Configure Security](install-config.html#security).</li>
<li>A developer enables TLS for an existing service instance.
    See [Enable TLS](using-tls.html#enable-tls).</li>
<li>A developer modifies their app to communicate securely with the MySQL server:
    <ul><li>For Java and Spring apps, see [Activate TLS for Java and Spring Apps](using-tls.html#activate-apps).</li>
    <li>For all other apps, see [Modifying Apps for TLS](modify-apps-tls.html).</li>
</li>
</ol>

<p class="note"><strong>Note</strong>: An operator must also rotate the CA certificate if it expires or if it becomes compromised.
For information on how to rotate your CA certificate, see <a href="rotating-ca.html">Rotating CA Certificates</a>.</p>

##<a id="provide-pcf-1-12"></a> Provide a CA Certificate in PCF v1.12

If you are using PCF v1.12, perform the following procedures to create a UAA client for CredHub,
log in to CredHub, and provide a CA certificate.

###<a id='uaa'></a> Create UAA Client

Perform the following steps to create a UAA client for CredHub on your UAA server:

1. Retrieve the IP address of the BOSH Director VM and the Director credentials by performing the steps
   in [Gather Credential and IP Address Information](https://docs.pivotal.io/pivotalcf/1-12/customizing/trouble-advanced.html#gather).
Both the UAA and CredHub servers are colocated on the BOSH Director VM.

1. In the **Credentials** tab of the Ops Manager Director, retrieve the **Uaa Login Client Credentials** and record the contents.

1. Retrieve the **Uaa Login Admin Credentials** and record the `identity` and `password` values.

1. SSH into the Ops Manager VM by performing the steps in [SSH into Ops Manager of Advanced Troubleshooting with the BOSH CLI](https://docs.pivotal.io/pivotalcf/1-12/customizing/trouble-advanced.html#ssh).

1. From the Ops Manager VM, use the UAA Command Line Interface (UAAC) to target the UAA server on the BOSH Director VM. 
    In the UAAC command, specify the IP address for the BOSH Director VM, and port 8443.
    <br><br> 
    Run the following command:

    ```
    uaac target BOSH-DIRECTOR:8443
    ```
    <br>
    Where `BOSH-DIRECTOR` is the IP address of the BOSH Director VM.
    You retrieved this address from the **Status** tab of the Ops Manager Director tile in step 1.
    <br><br>
    For example:
    <pre class="terminal">
    $ uaac target 10.0.0.5:8443
    </pre>

1. From the Ops Manager VM, use the UAAC to get a token.
    <br><br> 
    Run the following command:

    ```
    uaac token owner get login --secret=UAA-LOGIN-CLIENT-CRED
    ```
    <br>
    Where `UAA-LOGIN-CLIENT-CRED` is the **Uaa Login Client Credentials** you retrieved in step 2.
    <br><br>
    For example:
    <pre class="terminal">
    $ uaac token owner get \
        login --secret=abcdefghijklm123456789
    </pre> 

1. When prompted for a user name and password, enter the values for `identity` and `password` you retrieved in step 3. 
    For example:
    <pre class="terminal">
    User name:  admin
    Password:  ********************************
    </pre>

1. Add a UAA client for CredHub with the correct grants. 
    <br><br>
    Enter the following command:

    ```
    uaac client add \
    	--authorized\_grant\_types client\_credentials \
    	--authorities credhub.read,credhub.write
    ```

1. When prompted for Client ID, enter `credhub`.
   When prompted for `New client secret`, enter a secure password of your choice.
    For example:
    <pre class="terminal">
    Client ID:  credhub
    New client secret:  *******
    Verify new client secret:  *******
      scope: uaa.none
      client\_id: credhub
      resource\_ids: none
      authorized\_grant\_types: client\_credentials
      autoapprove:
      authorities: credhub.write credhub.read
      name: credhub
      required_user_groups:
      lastmodified: 1518198701452
      id: credhub
      created_by: f609e861-39ec-4a16-8aee-cba9e9b079e3
    </pre>

###<a id='credhub-cli'></a> Provide the CA Certificate

Perform the following steps to log in to CredHub, provide a CA certificate to the CredHub server, and add the certificate to Ops Manager:

1. In a browser, navigate to the [CredHub CLI releases page](https://github.com/cloudfoundry-incubator/credhub-cli/releases) on GitHub.

1. Copy the link for the Linux version of the latest CredHub CLI.

1. Use `wget` to download the latest CredHub CLI onto the Ops Manager VM.
   For example:
    <pre class="terminal">$ wget https<span>:</span>//github.com/cloudfoundry-incubator/credhub-cli/releases/download/1.6.0/credhub-linux-1.6.0.tgz</pre>

1. Untar the file, make it executable, and move it to your `$PATH`.
   Enter the following commands:
    <pre class="terminal">
    $ tar -xzvf credhub-linux*.tgz
    $ chmod +x credhub
    $ sudo mv credhub /usr/local/bin
    </pre>
    <p class="note"> For more information about using the CredHub CLI,
       see the <a href="https://credhub-api.cfapps.io">CredHub API documentation</a>.</p>

1. Set the API target of the CredHub CLI to your CredHub server.
    <br><br>
    Run the following command:

    ```
    credhub api https://BOSH-DIRECTOR:8844 --ca-cert=CREDHUB-CA-CERT
    ```
    <br>
    Where: 
    * `BOSH-DIRECTOR` is the IP address of the BOSH Director VM. 
    * `CREDHUB-CA-CERT` is the CA certificate that signed the CredHub and UAA certificates. 
    You can specify multiple CA certificates with multiple `--ca-cert` flags.
    <br><br>
    For example:
    <pre class="terminal">
    $ credhub api http<span>s:</span>//10.0.0.5:8844 --ca-cert=credhub-ca-cert
    </pre>

1. Log in to CredHub.
    <br><br>
    Run the following command:

    ```
    credhub login --client-name=credhub --client-secret=CLIENT-SECRET
    ```
    <br>
    Where `client-secret` is the client secret you set in step 9 above.
    <br><br>
    For example:
    <pre class="terminal">
    $ credhub login \
    	--client-name=credhub \
    	--client-secret=abcdefghijklm123456789
    </pre>

1. Use the CredHub CLI to generate a CA certificate or provide an existing one.
    <p class="note"><strong>Note</strong>: Your PCF deployment may have multiple CA certificates.
       Pivotal recommends a dedicated CA certificate for services.</p> 
	* If you do not have a CA certificate, use the CredHub CLI to generate one.
          Enter the following command:
		<pre class="terminal">
		$ credhub generate \
			--name="/services/tls_ca" \
			--type="certificate" \
			--is-ca \
            --common-name="rootCA"
		</pre>
    * If you have an existing CA certificate that you want to use, create a new file called `root.pem` with the contents of the certificate.
      Then enter the following command, specifying the path to `root.pem` and the private key for the certificate:
        <pre class="terminal">
        $ credhub set \
            --name="/services/tls_ca" \
            --type="certificate" \
            --certificate=./root.pem \
            --private=ERKSOSMFF...
        </pre>

1. Examine the output and copy the `certificate` portion.
    For example:
    <pre class="terminal">
    id: 67fc3def-bbfb-4953-83f8-4ab0682ad675
    type: certificate
    name: /example-certificate
    value:
      root: |
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      certificate: |
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      private\_key: |
        -----BEGIN RSA PRIVATE KEY-----
        ...
        -----END RSA PRIVATE KEY-----
    version\_created\_at: 2017-01-01T04:07:18Z
    </pre>

1. Make a note of when the CA certificate expires and add it to your calendar. 
Be sure to rotate the CA certificate before it expires by following the procedure in [Rotating CA Certificates](rotating-ca.html).
1. Navigate to the Ops Manager **Installation Dashboard** and select the **Ops Manager Director** tile. 
Click **Security**.
1. Paste the contents of the CA certificate into **Trusted Certificates** and click **Save**.
1. Return to the Ops Manager Installation Dashboard and click **Apply Changes**. 
This restarts all the VMs in your PCF deployment and applies your CA certificate.

After preparing your environment for TLS, you must enable TLS in the tile configuration while installing MySQL for PCF. 
See [Configure Security](install-config.html#security).

##<a id="provide-pcf-2-0"></a> Provide a CA Certificate in PCF v2.x

If you are using PCF v2.x, perform the following steps to provide a CA certificate to CredHub:

1. Retrieve the IP address of the BOSH Director VM and the Director credentials
   by performing the steps in [Gather Credential and IP Address Information](https://docs.pivotal.io/pivotalcf/2-0/customizing/trouble-advanced.html#gather). 
   Both the UAA and CredHub servers are colocated on the BOSH Director VM.

1. In the **Credentials** tab of the Ops Manager Director, retrieve the **Uaa Login Admin Credentials** and record the `identity` and `password` values.

1. SSH into the Ops Manager VM by performing the steps in
   [SSH into Ops Manager of Advanced Troubleshooting with the BOSH CLI](https://docs.pivotal.io/pivotalcf/2-0/customizing/trouble-advanced.html#ssh).

1. From the Ops Manager VM, set the API target of the CredHub CLI to your CredHub server.
    <br><br>
    Run the following command:

    ```
    credhub api https://BOSH-DIRECTOR:8844 --ca-cert=CREDHUB-CA-CERT
    ```
    <br>
    Where: 
    * `BOSH-DIRECTOR` is the IP address of the BOSH Director VM you retrieved in step 1. 
    * `CREDHUB-CA-CERT` is the CA certificate that signed the CredHub and UAA certificates. 
    You can specify multiple CA certificates with multiple `--ca-cert` flags.
    <br><br>
    For example:
    <pre class="terminal">
    $ credhub api http<span>s:</span>//10.0.0.5:8844 --ca-cert=credhub-ca-cert
    </pre>

1. Log in to CredHub.
    <br><br>
    Run the following command:

    ```
    credhub login --username=USERNAME --password=PASSWORD
    ```
    <br>
    Where:
    * `USERNAME` is the value for `identity` from the **Uaa Login Admin Credentials** that you retrieved in step 2.
    * `PASSWORD` is the value for `password` from the **Uaa Login Admin Credentials** that you retrieved in step 2.
    <br><br>
    For example:
    <pre class="terminal">
    $ credhub login \
        --username=admin \
        --password=abcdefghijklm123456789
    </pre>

1. Use the CredHub CLI to generate a CA certificate or provide an existing one.
    <p class="note"><strong>Note</strong>: Your PCF deployment may have multiple CA certificates.
       Pivotal recommends a dedicated CA certificate for services.</p> 
    * If you do not have a CA certificate, use the CredHub CLI to generate one.
      Enter the following command:
        <pre class="terminal">
        $ credhub generate \
            --name="/services/tls_ca" \
            --type="certificate" \
            --is-ca \
            --common-name="rootCA"
        </pre>
    * If you have an existing CA certificate that you want to use, create a new file called `root.pem` with the contents of the certificate.
      Then enter the following command, specifying the path to `root.pem` and the private key for the certificate:
        <pre class="terminal">
        $ credhub set \
            --name="/services/tls_ca" \
            --type="certificate" \
            --certificate=./root.pem \
            --private=ERKSOSMFF...
        </pre>

1. Examine the output and copy the `certificate` portion.
    For example:
    <pre class="terminal">
    id: 67fc3def-bbfb-4953-83f8-4ab0682ad675
    type: certificate
    name: /example-certificate
    value:
      root: |
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      certificate: |
        -----BEGIN CERTIFICATE-----
        ...
        -----END CERTIFICATE-----
      private\_key: |
        -----BEGIN RSA PRIVATE KEY-----
        ...
        -----END RSA PRIVATE KEY-----
    version\_created\_at: 2017-01-01T04:07:18Z
    </pre>

1. Make a note of when the CA certificate expires and add it to your calendar. 
Be sure to rotate the CA certificate before it expires by following the procedure in [Rotating CA Certificates](rotating-ca.html).
1. Navigate to the Ops Manager **Installation Dashboard** and select the **Ops Manager Director** tile. 
Click **Security**.
1. Paste the contents of the CA certificate into **Trusted Certificates** and click **Save**.
1. Return to the Ops Manager Installation Dashboard and click **Apply Changes**. 
This restarts all the VMs in your PCF deployment, and applies your CA certificate.

After preparing your environment for TLS, you must enable TLS in the tile configuration while installing MySQL for PCF. 
See [Configure Security](install-config.html#security).
