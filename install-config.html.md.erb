---
title: Installing and Configuring MySQL for PCF
owner: MySQL
---

This topic provides instructions to operators of Pivotal Cloud Foundry (PCF) about how to install, configure, and deploy the MySQL for PCF v2.1 tile.
The MySQL for PCF v2.1 service lets PCF developers create and use their own MySQL service instances on demand.

## <a id="prereq"></a> Prepare Your Ops Manager and PCF Installation for MySQL for PCF

Before you download and install the MySQL for PCF tile, complete the following procedures:

+ [Create an Application Security Group for MySQL for PCF](#asg)
+ [Enable the Ops Manager Resurrector](#resurrector)

### <a id="asg"></a> Create an Application Security Group for MySQL for PCF

To let apps running on Cloud Foundry communicate with the MySQL service network, you must create an Application Security Group (ASG).

The ASG allows smoke tests to run when you first install the MySQL for PCF service and allows apps to access the service after it is installed.

The example below follows [this procedure](http://docs.pivotal.io/pivotalcf/1-11/concepts/asg.html#asg-individual) to create an ASG.

To create an ASG for MySQL for PCF, do the following:</br>

1. Navigate to the Ops Manager Installation Dashboard and click the **Ops Manager Director** tile.

1. Click **Create Networks**.</br>
    ![Create Networks page](opsman-dir-networks.png)

1. Find the network that has **Service Network** checked, and find the **CIDR** that you can use in your ASGs.
    </br>
    ![Reserved IP Ranges](opsman-dir-reserved-ips.png)

1. Using the CIDR that you found in the above step, create a JSON file `mysql-asg.json` with the configuration below:

    ```json
    [
      {
        "protocol": "tcp",
        "destination": "CIDR",
        "ports": "3306"
      }
    ]
    ```

1. Use the CF CLI and the JSON file that you created to create an ASG called `p.mysql`:

    ```
    $ cf create-security-group p.mysql ./mysql-asg.json
    ```

1. Bind the ASG to the appropriate space or, to give all started apps access, bind to the `default-running` ASG set:

     ```
    $ cf bind-running-security-group p.mysql
    ```

### <a id="resurrector"></a> Enable the Ops Manager Resurrector

The [Ops Manager Resurrector](https://docs.pivotal.io/pivotalcf/1-10/customizing/resurrector.html)
increases the availability of MySQL for PCF by restarting and resuming MySQL service in the following ways:

- Reacts to hardware failure and network disruptions by restarting VMs on active, stable hosts
- Detects operating system failures by continuously monitoring VMs and restarting them as required
- Continuously monitors the BOSH Agent running on each service instance VM and restarts the VM as required

Pivotal recommends enabling the Ops Manager Resurrector when installing MySQL for PCF. To enable the Ops Manager Resurrector,
do the following:

1. Navigate to the Ops Manager Installation Dashboard and click the **Ops Manager Director** tile.

2. Click **Director Config**.

3. Select the **Enable VM Resurrector Plugin** checkbox.

4. Click **Save**.

For general information about the Ops Manager Resurrector,
see [Using Ops Manager Resurrector](https://docs.pivotal.io/pivotalcf/customizing/resurrector.html#enabling)

## <a id="install"></a> Download and Install the Tile

1. Download the product file from [Pivotal Network](https://network.pivotal.io/products/pivotal-mysql/).

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file. 

1. Under the **Import a Product** button, click **+** next to the version number of MySQL for PCF. 
   This adds the tile to your staging area.

1. Click the newly-added **MySQL for PCF** tile to open its configuration panes.

    ![AZ and Network Assignments pane](config-azs.png)

## <a id="config-on-demand"></a> Configure the Tile

Follow the steps below to configure the MySQL for PCF service. 
MySQL for PCF v2.1 has five service plans that deploy dedicated MySQL service instances on demand.

By default, MySQL for PCF has three active plans. The fourth and fifth plans are not active by default.

<p class="note"><strong>Important:</strong>In order to re-define plans later, you must leave <code>broker de-registrar</code> checked.</p>

###<a id="azs"></a> Configure AZs and Networks

Follow the steps below to choose an Availability Zone (AZ) to run the service broker and to select networks.

1. Click **Assign AZs and Networks**.

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Place singleton jobs in</strong></td>
        <td>Select the AZ that you want the MySQL broker VM to run in. The broker runs as a singleton job.</td></tr>
    <tr><td><strong>Balance other jobs in</strong></td>
        <td>Ignore; not used.</td></tr>
    <tr><td><strong>Network</strong></td>
        <td>Select a subnet for the MySQL broker. This is typically the same subnet that includes the Elastic Runtime component VMs.<br>
            This network is represented by the Default Network in this <a href="./about.html#on-demand">picture</a>.
            </td></tr>
    <tr><td><strong>Service Network</strong></td>
        <td>Select the subnet for the on-demand service instances, the Services Network in this <a href="./about.html#on-demand">picture</a>.
            <br >
            If you are adding IPsec to encrypt MySQL communication, Pivotal recommends that you deploy MySQL to its own network
            to avoid conflicts with services that are not IPsec compatible.
         </td></tr>
  </table>
    <p class="note"><strong>IMPORTANT</strong>: You cannot change the regions or networks
    after you click **Apply Changes** in the <a href="#apply-changes">final step</a> below.</p>

1. Click **Save**.

###<a id="active"></a> Configure Active Service Plans

Follow the steps below for each plan that you want to be active and used in your PCF deployment:

1. Click a plan side-tab, for example, **Plan 1**.

1. Click **Active**.

    ![plan-1-tab-v2.1.0](service-plan-configuration.png)

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Service Plan Access</strong></td>
        <td>Accept the default to enable access to all organizations in your PCF deployment.
            Select **Disable** to disable creating new services instances of this plan for all organizations.
            Select **Manual** to manually control service access with the cf CLI.</td></tr>
    <tr><td><strong>Plan Name</strong></td>
        <td>Accept the default or enter a name. 
            This is the name that appears in the PCF Marketplace for developers.</td></tr>
    <tr><td><strong>Plan Description</strong></td>
        <td>Accept the default or enter a description to help developers understand plan features. 
            Pivotal recommends adding VM type details and disk size to this field.
        </td></tr>
    <tr><td><strong>Plan Quota</strong></td>
        <td>Enter the maximum number of service instances that can exist at one time.</td></tr>
    <tr><td><strong>MySQL VM Type</strong></td>
        <td>Select a VM type. The plan creates service instances of this size.</td></tr>
    <tr><td><strong>MySQL Persistent Disk</strong></td>
        <td>Select a disk size. This disk stores the MySQL messages.
            <p class="note"><strong>Note</strong>: If you intend to enable backups, choose a persistent disk type 
                that is three times as large as you intend to provide to developers.
                For more information, see <a href="backup-and-restore.html">Backing Up and Restoring On-Demand MySQL</a>.</p>
    </td></tr>
    <tr><td><strong>MySQL Availability Zone</strong></td>
        <td>Select one AZ for the single node.
            The plan creates all service instance VMs in this AZ. Choose a different AZ than the one that the broker is in.</td></tr>
  </table>
1. Click **Save**.

###<a id="inactive"></a> Configure Inactive Service Plans

Follow the steps below for each plan that you want to be inactive:

1. Click a plan side-tab, for example, **Plan 2**.

1. Click **Inactive**.

    ![plan-inactive-tab-v2.1.0](service-plan-inactive.png)

     <p class="note"><strong>IMPORTANT</strong>: You cannot inactivate a plan that currently has existing service instances.
        Disable the plan and delete existing service instances before deactivating.</p>

1. Click **Save**.

###<a id="global"></a> Configure Global Settings

Follow the steps below to determine if service instances are assigned public IP addresses 
and to set the total number of service instances allowed across all plans. 

1. Click **Settings**.

    ![global-settings](global-settings.png)

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Provide public IP addresses to all Service VMs</strong></td>
        <td>Select this checkbox:<ul>
            <li>If the service instances need an external backup, blobstore, or syslog storage</li>
            <li>If you have configured BOSH to use an external blobstore.</li></ul>
            </td></tr>
    <tr><td><strong>Maximum service instances</strong></td>
        <td>Enter the global quota for all on-demand instances summed across every on-demand plan.
            For information about determining global quotas, see <a href="recommended.html#serviceplan">
            Service Plan Recommended Usage and Limitations</a>.
           </td></tr>
  </table>

1. Click **Save**.

###<a id="mysql"></a> Configure MySQL

Follow the steps below to set MySQL defaults and enable developers to customize their instances:

1. Click **Mysql Configuration**

    ![mysql-config](mysql-config.png)

1. Configure the fields as follows:

  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Enable Lower Case Table Names</strong></td>
        <td>Select this checkbox to set `lower_case_table_names` to 1 on all MySQL for PCF instances. For more information read
         the [MySQL documentation](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_lower_case_table_names).
         </td></tr>
    <tr><td><strong>Allow Developers To Override Lower Case Table Names</strong></td>
        <td>Select this checkbox to allow developers to override the default Lower Case Table Names value set above. By default, all service instances
        will be created with the value based on "Enable Lower Case Table Names" above. Checking this box allows developers to modify it
        using the cf CLI.</td></tr>
    <tr><td><strong>Enable Local Infile</strong></td>
        <td>Select this checkbox to enable data downloading from the client's local file system.
            For more information about local data loading capability,
            see [Security Issues with LOAD DATA LOCAL](https://dev.mysql.com/doc/refman/5.7/en/load-data-local.html) in the MySQL 5.7 Reference Manual.
    </td></tr>
  </table>

###<a id="monitoring"></a> Configure Monitoring

Follow the steps below to enable different types of monitoring and logging available in the MySQL service.

1. Click **Monitoring**.

    ![monitoring](monitoring.png)

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Metrics Polling Interval</strong></td>
        <td>Set this time, in seconds, to determine the frequency that the monitor polls for metrics.
            All service instances emit metrics about the health and status of the MySQL server.</td></tr>
    <tr><td><strong>Enable User Statistics Logging</strong></td>
        <td>Select this checkbox to better understand server activity and identify sources of load on a MySQL server.
            For more information about user statistics, see <a href="https://www.percona.com/doc/percona-server/5.7/diagnostics/user_stats.html">
            User Statistics Documentation</a>.
            </td></tr>
    <tr><td><strong>Enable Server Activity Logging</strong></td>
        <td>Select this checkbox to record who connects to the servers and what queries are processed using the Percona Audit Log Plugin.
            For more information, see the <a href="https://www.percona.com/doc/percona-server/5.7/management/audit_log_plugin.html">Percona Documentation</a>.
           </td></tr>
    <tr><td><strong>Enable Read Only Admin User</strong></td>
        <td>Select this checkbox to create a read-only admin user, `roadmin`, on each service instance.
            This user can be used for auditing and monitoring without risking
            mutating or changing any data.</td></tr>
  </table>

1. Click **Save**.

###<a id="syslog"></a> Configure System Logging

Follow the steps below to enable system logging for the MySQL broker and service instance VMs.

1. Click **Syslog**.

1. Click **Yes**.

    ![syslog](syslog.png)

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr>
        <td><strong>Address</strong></td>
        <td>Enter the address or host of the syslog server for sending logs, for example, 
            <code>logmanager.example.com</code>.</td></tr>
    <tr><td><strong>Port</strong></td>
        <td>Enter the port of the syslog server for sending logs, for example, <code>29279</code>.</td></tr>
    <tr><td><strong>Transport Protocol</strong></td>
        <td>Select the protocol over which you want system logs. Pivotal recommends using TCP.</td></tr>
    <tr><td><strong>Enable TLS</strong></td>
        <td>If you select TCP, you can also select to send logs encrypted over TLS.</td></tr>
    <tr><td><strong>Permitted Peer</strong></td>
        <td>Enter either the accepted fingerprint, in SHA1, or the name of the remote peer, for example, <code>*.example.com</strong></td></tr>
    <tr><td><strong>SSL Certificate</strong></td>
        <td>Enter the SSL Certificate(s) for the syslog server. This ensures the logs are transported securely.</td></tr>
  </table>
  <p class="note"><strong>IMPORTANT</strong>: If your syslog server is external to PCF, you might need to select
            <strong>Provide public IP addresses to all Service VMs</strong> on the <strong>Settings</strong> page.<p>

1. Click **Save**.

###<a id="stemcell"></a> Verify Stemcell Version and Apply All Changes

1. Click **Stemcell**.

1. Verify and, if necessary, import a new stemcell version.  
   For more information, see about importing the stemcell for your IaaS:
   [AWS](https://docs.pivotal.io/pivotalcf/customizing/cloudform-er-config.html#stemcell),
   [Azure](https://docs.pivotal.io/pivotalcf/customizing/azure-er-config.html#stemcell), 
   [GCP](https://docs.pivotal.io/pivotalcf/customizing/gcp-er-config.html#stemcell), or
   [vSphere](https://docs.pivotal.io/pivotalcf/customizing/config-er-vmware.html#stemcell).

1. Click **Save**.

1. <a name="apply-changes"></a>Return to the Ops Manager Installation Dashboard and click **Apply Changes**.
