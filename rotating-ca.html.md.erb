---
title: Managing Certificates
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic describes how to check expiration dates and rotate certificates used by MySQL for PCF.

## <a id="overview"></a> Types of Certificates

MySQL for PCF uses the following types of certificates:

+ **TLS certificates managed by the operator:** If you are using TLS for MySQL for PCF,
you provided a CA certificate to BOSH CredHub when you did the procedures	in [Preparing for TLS](prepare-tls.html). Operators must manually rotate this TLS CA certificate before the certificate expires or if it is compromised.

+ **Internal certificates managed by MySQL for PCF:** When you upgrade to MySQL for PCF v2.6,
MySQL for PCF automatically rotates the internal certificates
for single node and leader-follower service instances. The new certificates do not expire for 5 years.
For more information, see [Rotate Internal Certificates](#internal) below.
<p class="note"><strong>Note:</strong> MySQL for PCF v2.6 does not rotate certificates for highly available (HA) clusters service instances.
To rotate these certificates, you must upgrade to MySQL for PCF v2.7. See <a href="https://docs.pivotal.io/p-mysql/2-7/upgrade.html">Upgrading MySQL for PCF</a>.
</p>

For a list of the certificates used by MySQL for PCF certificates, see [Certificates Used by MySQL for PCF](#mysql-certs)
below.

<p class="note warning"><strong>Warning</strong>: Do not attempt to rotate a CA certificate on your own.
Contact <a href="https://support.pivotal.io">Pivotal Support</a>
and perform the following procedures with their help.
</p>

### <a id="mysql-certs"></a> Certificates Used by MySQL for PCF

The following table lists the certificates used by MySQL for PCF:

<table>
  <tr>
    <th width="75%"">Certificate</th>
    <th>Rotated by MySQL for PCF?</th>
  </tr>

  <tr>
    <th colspan="2">TLS Certificates</th>
  </tr>

  <tr>
    <td><code>/services/tls_ca</code></td>
    <td>No</td>
  </tr>

  <tr>
    <td><code>mysql_tls</code></td>
    <td>No</td>
  </tr>

  <tr>
    <td><code>mysql_server_tls</code></td>
    <td>No</td>
  </tr>

  <tr>
    <th colspan="2">Internal HA Certificates</th>
  </tr>

  <tr>
    <td><code>/service_instance_GUID/pxc_tls_ca</code></td>
    <td>No</td>
  </tr>

  <tr>
    <td><code>/service_instance_GUID/pxc_tls_server</code></td>
    <td>No</td>
  </tr>

  <tr>
    <td><code>/service_instance_GUID/pxc_internal</code></td>
    <td>No</td>
  </tr>

  <tr>
    <th colspan="2">Internal Single Node and Leader Follower Certificates</th>
  </tr>

  <tr>
    <td><code>/pivotal_mysql_GUID/agent_ca</code></td>
      <td>Yes</td>
  </tr>

  <tr>
    <td><code>/pivotal_mysql_GUID/agent_client_ssl</code></td>
    <td>Yes</td>
  </tr>

  <tr>
    <td><code>/pivotal_mysql_GUID/agent_server_ssl</code></td>
    <td>Yes</td>
  </tr>

    <tr>
      <td><code>/service_instance_GUID/agent_ca</code></td>
      <td>Yes</td>
    </tr>

    <tr>
      <td><code>/service_instance_GUID/lf_agent_client_ssl</code></td>
      <td>Yes</td>
    </tr>

    <tr>
      <td><code>/service_instance_GUID/lf_agent_server_ssl</code></td>
      <td>Yes</td>
    </tr>

      <tr>
        <td><code>/service_instance_GUID/agent_client_ssl</code></td>
        <td>Yes</td>
      </tr>

      <tr>
        <td><code>/service_instance_GUID/agent_server_ssl</code></td>
        <td>Yes</td>
      </tr>

      <tr>
        <td><code>/service_instance_GUID/streaming_backup_ca</code></td>
        <td>Yes</td>
      </tr>

      <tr>
        <td><code>/service_instance_GUID/streaming_backup_server_cert</code></td>
        <td>Yes</td>
      </tr>
</table>

In the above table, `GUID` is the GUID for the service instance. To find the GUID
of your service instance, do the procedure in
[Find Information about Your Service Instance](./troubleshoot-instances.html#instance).

## <a id="credhub"></a> Check Expiration Dates

Pivotal Cloud Foundry (PCF) stores the certificates used by MySQL for PCF
and then use the credentials to log in to CredHub from the Ops Manager VM. You can use the CredHub API to check the expiration date for the certificates used by MySQL for PCF. For more information, see [BOSH CredHub](https://docs.pivotal.io/pivotalcf/credhub/#bosh).

To use the CredHub API, you must retrieve credentials from BOSH Director and then use the credentials to log in to CredHub from the Ops Manager VM.

To check certificate expiration dates:

1. If the CredHub CLI is not installed on your local machine, install the CredHub CLI by doing the instructions in [credhub-cli](https://github.com/cloudfoundry-incubator/credhub-cli) on GitHub.

1. In the Ops Manager Installation Dashboard, click the **BOSH Director** tile.

1. Click the **Credentials** tab.

1. In the **BOSH Director** section, click the link to the **BOSH Commandline Credentials**.
![CredHub Credentials](credhub-creds.png)

1. Record the values for `BOSH_CLIENT` and `BOSH_CLIENT_SECRET`.<br>
  For example:

    ```
    {"credential":"BOSH_CLIENT=ops_manager
    BOSH_CLIENT_SECRET=abCdE1FgHIjkL2m3n-3PqrsT4EUVwXy5
    BOSH_CA_CERT=/var/tempest/workspaces/default/root_ca_certificate
    BOSH_ENVIRONMENT=10.0.0.5 bosh "}
  ```
  The `BOSH_CLIENT` is the BOSH CredHub client name and the `BOSH_CLIENT_SECRET` is
  the BOSH CredHub client secret.

1. Record the information needed to log in to the BOSH Director VM by doing the procedure in
[Gather Credential and IP Address Information](https://docs.pivotal.io/pivotalcf/2-4/customizing/trouble-advanced.html#gather).

1. Log in to the Ops Manager VM by doing the procedure in
[Log in to the Ops Manager VM with SSH](https://docs.pivotal.io/pivotalcf/2-4/customizing/trouble-advanced.html#ssh).

1. From the Ops Manager VM, set the API target of the CredHub CLI to your BOSH
CredHub server by running the following command:

    ```
    credhub api https://BOSH-DIRECTOR:8844 --ca-cert=/var/tempest/workspaces/default/root_ca_certificate
    ```
  Where `BOSH-DIRECTOR` is the IP address of the BOSH Director VM you recorded above.
  <br><br>
  For example:
  <pre class="terminal">
  $ credhub api http<span>s:</span>//10.0.0.5:8844 --ca-cert=/var/tempest/workspaces/default/root\_ca\_certificate
  </pre>

1. Log in to CredHub by running the following command:

    ```
    credhub login --client-name=CREDHUB-CLIENT-NAME --client-secret=CREDHUB-CLIENT-SECRET
    ```
    Where:<br>
    * `CREDHUB-CLIENT-NAME` is the value you recorded for `BOSH_CLIENT` in step 5
    of this procedure.
    * `CREDHUB-CLIENT-SECRET` is the value you recorded for `BOSH_CLIENT_SECRET`
    in step 5 of this procedure.

    For example:
    <pre class="terminal">
    $ credhub login \
    --client-name=credhub \
    --client-secret=abcdefghijklm123456789
    </pre>


1. Run the following command:

    ```
    credhub get -n CERTIFICATE-NAME -j | jq -r .value.ca | openssl x509 -text -noout | grep -A 2 "Validity"
    ```
    Where `CERTIFICATE-NAME` is the name of the certificate you are checking.<br /><br>
    For example:
    <pre class="terminal">
    $ credhub get -n /services/tls_ca -j | jq -r .value.ca | openssl x509 -text -noout | grep -A 2 "Validity"
    Validity
              Not Before: Jan 23 19:04:58 2019 GMT
              Not After : Jan 23 19:04:58 2020 GMT
    </pre>

    The above command retrieves the certificate from CredHub, parses its JSON structure,
    decrypts it, and finds its `Validity` properties. The expiration date for the certificate is the value of  `Not After`.<br><br>

    For a list of MySQL for PCF certificates,
    see [Certificates Used by MySQL for PCF](#mysql-certs) above.
1. If any of your certificates are about to expire or have expired, do one of the following: 
  * **If your TLS certificates are about to expire or have expired,** do the procedures in [Rotate the TLS CA Certificate](#tls) below.<br><br>
  * **If only your internal certificates for single node or leader-follower service instances are about to expire or have expired,** do the procedure in [Rotate Internal Certificates](#internal) below.<br><br>
  * **If your internal certificates for HA clusters are about to expire or have expired,** you must upgrade to MySQL for PCF v2.7. See [Upgrading MySQL for PCF](https://docs.pivotal.io/p-mysql/2-7/upgrade.html).

##<a id='tls'></a> Rotate the TLS CA Certificate

This following procedures rotate a TLS CA certificate and regenerate the certificates signed by the TLS CA certificate. Only the certificates for single node and leader-follower service instances are rotated. To rotate certificates for HA clusters, upgrade to MySQL for PCF v2.7. See [Upgrading MySQL for PCF](https://docs.pivotal.io/p-mysql/2-7/upgrade.html).

To manually rotate the TLS CA certificate:

1. [Add a New TLS CA Certificate](#add)
2. [Regenerate Internal Certificates](#regenerate)
3. [Rebind Your App](#rebind)
4. [Remove the Old TLS CA Certificate](#remove)

### <a id="add"></a> Add a New TLS CA Certificate

<p class="note warning"><strong>Warning</strong>: This procedure involves restarting
all of the VMs in your PCF deployment to apply a CA certificate. The
operation can take a long time to complete.
</p>

To add a new TLS CA Certificate to Ops Manager:

1. Log in to CredHub by doing steps 1 through 9 in [Check Expiration Dates](#credhub) above.

2. Set the TLS CA certificate by doing one of the following:
  <p class="note"><strong>Note</strong>: Your PCF deployment can have
  multiple CA certificates.
   Pivotal recommends using a dedicated CA certificate for each service.</p>
    * **If you do not have a TLS CA certificate:** generate a new certificate by running the following command:

        ```
        credhub regenerate --name="/services/tls_ca"
        ```
    * **If you have an existing certificate:** create
    a new `root.pem` file with the contents of the certificate.
    Then, run the following command:

        ```
        credhub set \
            --name="/services/tls_ca" \
            --type="certificate" \
            --certificate=PEM-PATH/root.pem \
            --private=CERT-KEY...
        ```
      Where:
      * `PEM-PATH` is the path to the `root.pem` file.
      * `CERT-KEY` is the private key for the certificate.
3. Extract and output the `certificate` portion from the TLS CA certificate
by running the following command:

    ```
    bosh int <(credhub get \
    --name=/services/tls_ca) \
    --path /value/certificate
    ```

4. Record the output.

5. Navigate to the Ops Manager Installation Dashboard and click the **BOSH Director** tile.

6. Click **Security**.

6. Append the contents of the new TLS CA certificate to the old CA certificate under **Trusted Certificates**.
Do not remove the old TLS CA certificate.

1. Click **Save**.

7. (Optional) Distribute the new TLS CA certificate to your VMs and regenerate each  certificate using the new TLS CA certificate by doing the following:

  1. Navigate back to the **Installation Dashboard**.

  1. Click **Review Pending Changes**.

  1. Click **ERRANDS**.

  1. Select **Upgrade all On-demand MySQL Service Instances**.
    ![Select errands to run during deployment](select-errands.png)

    <p class="note"><strong>Note:</strong> If you do not select <strong>Upgrade all On-demand MySQL Service Instances</strong>,
    you must manually run the <code>upgrade-all-services-instances</code> errand after applying changes.
    To manually run this errand, see <a href="#regenerate">Regenerate Internal Certificates</a> below.</p>

8. Return to the **Installation Dashboard** in Ops Manager and click **Apply Changes**.

### <a id="regenerate"></a> Regenerate Internal Certificates

<p class="note"><strong>Note:</strong> The following procedure manually runs the <code>upgrade-all-service-instances</code> errand. If you selected the <strong>Upgrade all On-demand MySQL Service Instances</strong> in <a href="#add">Add a New TLS CA Certificate</a> above, skip the following procedure. </p>

To regenerate your internal certificates and redeploy your service instances:

1. Log in to CredHub by doing steps 1 through 9 in [Check Expiration Dates](#credhub) above.

1. Regenerate all certificates signed by the old TLS CA certificate by running the following command:

    ```
    curl "https://BOSH-DIRECTOR:8844/api/v1/bulk-regenerate" -X POST \
    -d '{ "signed_by": "/services/tls_ca" }' \
    -H "authorization: $(credhub --token)" \
    -H 'content-type: application/json'
    ```
    Where `BOSH-DIRECTOR` is the IP address of the BOSH Director VM.

1. Redeploy all service instances with the new internal certificates by running the following command:

    ```
    bosh -d p-mysql-GUID run-errand upgrade-all-service-instances
    ```
    Where `pivotal-mysql-GUID` is the BOSH deployment name for your MySQL service broker.
    
### <a id="remove"></a> Remove the Old CA Certificate

<p class="note warning"><strong>Warning: </strong> This procedure involves restarting
	all of the VMs in your PCF deployment to apply a CA certificate. The
	operation can take a long time to complete.</p>

If you are rotating your TLS CA certificate because it was compromised, you must remove
your old TLS CA certificate before rebinding your app.

To remove the old TLS CA certificate:

1. Navigate to the **Installation Dashboard** in Ops Manager and click the **BOSH
Director** tile.

1. Click **Security**.

1. Delete the old TLS CA certificate in **Trusted Certificates**.

1. Click **Save**.

1. Return to the **Installation Dashboard** in Ops Manager and click **Apply Changes**.
This restarts all the VMs in your deployment.

### <a id='rebind'></a> Rebind Your App

If your apps do not use the trusted store to validate certificates, developers
 must rebind apps to the service instance to receive the updated TLS CA certificate.
 Apps not written in Java and Spring do not use the trusted store.

To rebind your app:

1. Stop your app by running the following command:

	```
	cf stop YOUR-APP
	```
	Where `YOUR-APP` is the name of your app.

1. Unbind your app from the service instance by running the following command:

	```
	cf unbind-service YOUR-APP YOUR-SERVICE-INSTANCE
	```
	Where:
	+ `YOUR-APP` is the name of your app.
	+ `YOUR-SERVICE-INSTANCE` is the name of your service instance.

1. Re-bind your app to the service instance by running the following command:

	```
	cf bind-service YOUR-APP YOUR-SERVICE-INSTANCE
	```
	Where:
	+ `YOUR-APP` is the name of your app.
	+ `YOUR-SERVICE-INSTANCE` is the name of your service instance.
1. Restage your app by running the following command:

	```
	cf restage YOUR-APP
	```
	Where `YOUR-APP` is the name of your app.

## <a id="internal"></a> Rotate Internal Certificates 

When you upgrade to MySQL for PCF v2.6, MySQL for PCF automatically
rotates the internal certificates single node and leader-follower service instances. The new certificates do not expire for 5 years.
The below commands upgrade all of your MySQL for service instances and distribute the new certificates to your service instances. 

To ensure that the internal certificates rotate, do one of the following:

+ **If you have not upgraded to MySQL for PCF v2.6,** do the following:
    1. Navigate to the Ops Manager Installation Dashboard and click the **MySQL for Pivotal Cloud Foundry v2** tile.
    1. Click **Errands**.
    1. Under **Post-Deploy Errands**, ensure that **Upgrade all On-demand MySQL Service Instances** is set to **Default (On)**.

          ![Upgrade All Instances Errand](upgrade-all-instances-errand.png)
    1. Click **Save.**

+ **If you have already upgraded to MySQL for PCF v2.6 without the Upgrade all On-demand MySQL Service Instances errand on,** run the following command:

    ```
    bosh -d p-mysql-GUID run-errand upgrade-all-service-instances
    ```
    
    Where `pivotal-mysql-GUID` is the BOSH deployment name for your MySQL service broker.
    
    For a list of certificates used by MySQL for PCF,
      see [Certificates Used by MySQL for PCF](#mysql-certs) above.
