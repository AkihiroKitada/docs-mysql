---
title: Architecture
owner: MySQL
---

This topic describes the high-level component architecture of the MySQL for PCF service, in both its single-node and HA configurations. It also describes the defaults and other design decisions applied the service's [MariaDB](https://mariadb.com/kb/en/mariadb/what-is-mariadb-galera-cluster/) servers and the [Galera Cluster](http://galeracluster.com) that manages them.

## <a id="healthy"></a> Healthy Cluster

Galera documentation refers to nodes in a healthy cluster as being part of a [primary component](http://galeracluster.com/documentation-webpages/glossary.html#term-primary-component). These nodes will respond normally to all queries, reads, writes, and database modifications.

If an individual node is unable to connect to the rest of the cluster (ex: network partition) it becomes non-primary (stops accepting writes and database modifications). In this case, the rest of the cluster should continue to function normally. A non-primary node may eventually regain connectivity and rejoin the primary component.

If more than half of the nodes in a cluster are no longer able to connect to each other, all of the remaining nodes lose quorum and become non-primary. In this case, the cluster must be manually restarted, as documented in the [bootstrapping docs](bootstrapping.html).

## <a id="quorum"></a> Quorum ##

  - In order for the cluster to continue accepting requests, a quorum must be reached by peer-to-peer communication. More than half of the nodes must be responsive to each other to maintain a quorum.
  - If more than half of the nodes are unresponsive for a period of time the nodes will stop responding to queries, the cluster will fail, and bootstrapping will be required to re-enable functionality.

![Quorum](slide9.png)

### <a id="even-number"></a> Avoid an even number of nodes ###
  - It is generally recommended to avoid an even number of nodes. This is because a partition could cause the entire cluster to lose quorum, as neither remaining component has more than half of the total nodes.
  - A 2 node cluster cannot tolerate the failure of single node failure as this would cause loss of quorum. As such, the minimum number of nodes required to tolerate single node failure is 3.

## <a id="defaults"></a> Defaults 

This section describes the defaults that the MySQL for PCF tile applies to its Galera and MariaDB components.

### SST method

Galera supports multiple methods for [State Snapshot Transfer](http://www.percona.com/doc/percona-xtradb-cluster/5.5/manual/state_snapshot_transfer.html).
The `rsync` method is usually fastest. The `xtrabackup` method has the advantage of keeping the donor node writeable during SST. We have chosen to use `xtrabackup`.

### InnoDB Log Files
Our cluster defaults to 1GB for log file size to support larger blob.

### Max User Connections
To ensure all users get fair access to system resources, we default each user's number of connections to 40. Operators can override this setting, per plan, in the Service Plans configuration pane.

### Skip External Locking
Since each Virtual Machine only has one mysqld process running, we do not need external locking.

### Max Allowed Packet
We allow blobs up to 256MB. This size is unlikely to limit a user's query, but is also manageable for our InnoDB log file size. Consider using our Riak CS service for storing large files.

### Innodb File Per Table
Innodb allows using either a single file to represent all data, or a separate file for each table. We chose to use a separate file for each table as this provides more flexibility and optimization. For a full list of pros and cons, see MySQL's documentation for [InnoDB File-Per-Table Mode](http://dev.mysql.com/doc/refman/5.5/en/innodb-multiple-tablespaces.html).

### Innodb File Format
To take advantage of all the extra features available with the `innodb_file_per_table = ON` option, we use the `Barracuda` file format.

### Temporary Tables
MySQL is configured to convert temporary in-memory tables to temporary on-disk tables when a query EITHER generates more than 16 million rows of output or uses more than 32MB of data space.
Users can see if a query is using a temporary table by using the EXPLAIN command and looking for "Using temporary," in the output.
If the server processes very large queries that use /tmp space simultaneously, it is possible for queries to receive no space left errors.

### Reverse Name resolution
Since our connection authentication is implemented using user credentials, the default implementation does not restrict to host names from which a user may connect. To save time on each new connection, we've turned off reverse name resolution by default.

### Large Data File Ingestion
Now that a major bug has been fixed in MariaDB, we enable `wsrep_load_data_splitting` which splits large data imports into separate transactions to enable loading data into a MariaDB cluster.
