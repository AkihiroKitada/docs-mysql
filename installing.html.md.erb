---
title: Installing MySQL for PCF
owner: MySQL
---

This topic explains how to install MySQL for Pivotal Cloud Foundry (PCF).

## <a id="plan"></a>Plan your Deployment ##

### <a id="network-layout"></a>Network Layout ##

MySQL for PCF supports deployment to multiple availability zones (AZs) on vSphere only. On other infrastructures, specify only one AZ.

To optimize uptime, deploy a load balancer in front of the SQL Proxy nodes. Configure the load balancer to route client connections to all proxy IPs, and configure the MySQL service to give bound applications a hostname or IP address that resolves to the load balancer. This eliminates the first proxy instance as a single point of failure. See [Configure a Load Balancer](#load-balancer) below for load balancer configuration recommendations.

If you deploy the MySQL service on a different network than Elastic Runtime, configure the firewall rules as follows to allow traffic between Elastic Runtime and the MySQL service.

| Type | Listening service | TCP Port |
| ---- | ---- | ---- |
| Inbound/TCP | Service broker | 8081 |
| Inbound/TCP | SQL proxy | 3306 |
| Inbound/TCP | Proxy health check | 1936 |
| Inbound/TCP | Proxy API | 8080 |
| Inbound/TCP | Proxy health check | 1936 |
| Outbound/TCP | NATS | 4222 |
| Internal/TCP | MySQL server | 3306 |
| Internal/TCP | Galera | 4567 |
| Internal/TCP | Galera health check | 9200 |

### <a id="load-balancer"></a> Configure a Load Balancer

In older versions of the product, applications were given the IP of the single MySQL server in bind credentials. When upgrading to v1.5.0, existing applications will continue to function, but, to take advantage of high availability features, they must be rebound to receive either the IP of the first proxy instance or the IP/hostname of a load balancer.

In order to configure a load balancer with the IPs of the proxy tier before v1.5.0 is deployed and prevent applications from obtaining the IP of the first proxy instance, the product enables an operator to configure the IPs that will be assigned to proxy instances. The following instructions applies to the **Proxy** pane under the MySQL tile **Settings** tab in Ops Manager.

- In the **Proxy IPs** field, enter a list of IP addresses that should be assigned to the proxy instances. These IP addresses must be in the CIDR range configured in the Director tile and not be currently allocated to another VM. Look at the **Status** pages of other tiles to see what IP addresses are in use.

- In the **Binding Credentials Hostname** field, enter the hostname or IP address that should be given to bound applications for connecting to databases managed by the service. This hostname or IP address should resolve to your load balancer and be considered long-lived. When this field is modified, applications must be rebound to receive updated credentials.

Recommendations for configuring your load balancer:

* **Configure your load balancer in failover-only mode.** Because proxy instances are not synchronized, Pivotal recommends configuring your load balancer to send all traffic to one proxy instance and to redirect all traffic to the other proxy if the first proxy fails. Amazon ELB does not support this configuration.

* **Make your idle time out long enough to not interrupt long-running queries.** When queries take a long time, the load balancer can time out and interrupt the query.  
For example, [AWS's Elastic Load Balancer](http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html) has a default idle timeout of 60 seconds, so if a query takes longer than this duration then the MySQL connection will be severed and an error will be returned.

* **Configure your load balancer with a healthcheck or monitor, using TCP against port 1936**. Unauthenticated healthchecks against port 3306 may cause the service to become unavailable and require manual intervention to fix.

#### <a id="proxy-sync"></a> Proxies may write to different MySQL masters

All proxy instances use the same method to determine cluster health. However, certain conditions may cause the proxy instances to route to different nodes, for example after brief cluster node failures.

This could be an issue for tables that receive many concurrent writes. Multiple clients writing to the same table could obtain locks on the same row, resulting in a deadlock. One commit will succeed and all others will fail and must be retried. This can be prevented by configuring your load balancer to route connections to **only one proxy instance at a time**.


#### <a id="add-lb"></a> Adding a Load Balancer after an Initial Deploy

If you initially deploy v1.5.0 without a load balancer and without proxy IPs configured, you can set up a load balancer later to remove the proxy as a single point of failure. When adding a load balancer to an existing installation, you need to:

- Rebind your apps to receive the hostname or IP that resolves to the load balancer. To rebind: unbind your application from the service instance, bind it again, then restage your application. For more information see [Managing Service Instances with the CLI](http://docs.pivotal.io/pivotalcf/devguide/services/managing-services.html). In order to avoid unnecessary rebinding, we recommend configuring a load balancer before deploying v1.5.0.
- Instead of configuring the proxy IPs in Ops Manager, configure DNS for your load balancer to point to the IPs that were dynamically assigned to your proxies. You can find these IPs in the **Status** tab. Configuration of proxy IPs after the product is deployed with dynamically assigned IPs is not well supported.

### <a id="asg"></a> Create an Application Security Group

Create an [Application Security Group](http://docs.pivotal.io/pivotalcf/adminguide/app-sec-groups.html) (ASG) for MySQL for PCF to allow apps to access to the service. See [Creating Application Security Groups for MySQL](./app-security-groups.html) for instructions.

<p class="note"><strong>Note</strong>: The service will not be usable until an ASG is in place.</p>

## <a id="install"></a>Install the MySQL for PCF Tile

1. Download the product file from [Pivotal Network](https://network.pivotal.io/products/p-mysql).

1. Navigate to the Ops Manager Installation Dashboard.

	<%= image_tag('available-products.png') %>

1. Click **Import a Product** to upload the product file to your Ops Manager installation.

	<%= image_tag('add-product.png') %>

1. Click **Add** next to the uploaded product description in the **Available Products** view to add this product to your staging area.

	<%= image_tag('config-mysql.png') %>

1. Click the newly-added tile to configure the settings for your MySQL for PCF service, including its service plans. See [Configuring MySQL for PCF](./configuring.html) for instructions.

	<%= image_tag('apply-changes.png') %>

1. Click **Apply Changes** to deploy the service.
