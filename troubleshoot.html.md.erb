---
title: Troubleshooting MySQL for PCF
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic provides operators with basic instructions for troubleshooting on-demand MySQL for PCF.
For information about temporary MySQL for PCF service interruptions, see
<a href="./upgrade.html#interruptions">Service Interruptions</a>.

## <a id="errors"></a> Troubleshooting Errors

This section provides information on how to troubleshooting specific errors or error messages.

### <a id="install-fail"></a> Failed Install

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-err-install-fail' %>

### <a id="cannot-create-delete"></a> Cannot Create or Delete Service Instances


<!-- The below partial is in https://github.com/pivotal-cf/docs-partials -->

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-err-cannot-create-delete' %>

###<a id="timeouts"></a> Broker Request Timeouts


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-err-timeouts' %>

###<a id="cannot-bind"></a> Cannot Bind to or Unbind from Service Instances

#### <a id="instance-not-exist"></a> Instance Does Not Exist

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-err-instance-not-exist' %>

####<a id="other-errors"></a> Other Errors


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-err-other-errors' %>

###<a id="cannot-connect"></a> Cannot Connect to a Service Instance


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-err-cannot-connect' %>

Service instances can also become temporarily inaccessible during upgrades and VM or network failures. See
<a href="./upgrade.html#interruptions">Service Interruptions</a> for more information.

###<a id="upgrade-all-fails"></a>Upgrade All Instances Fails


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-err-upgrade-all-fails' %>

###<a id="missing-logs"></a> Missing Logs and Metrics


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-err-missing-logs' %>

###<a id="unable-to-determine"></a>Unable to Determine Leader and Follower (Errand Error)

This problem happens when the <code>configure-leader-follower</code>
errand fails because it cannot determine the VM roles.

#### Symptom

The <code>configure-leader-follower</code> errand exits with <code>1</code>
and the errand logs contain the following:

<pre class="terminal">
  $ unable to determine leader and follower based on transaction history.
</pre>

#### Explanation

Something has happened to the instances, such as a failure or manual intervention.
As a result, there is not enough information available to determine the correct state
and topology without operator intervention to resolve the issue.

#### Solution

Use the <code>inspect</code> errand to determine which instance should be the leader. Then, using the
<a href="./about-leader-follower.html#errands">orchestration</a>
errands and backup/restore, you can put the service instance into a safe topology, and then rerun the
<code>configure-leader-follower</code> errand. This is shown in the example below.
This example shows one outcome that the <code>inspect</code> errand can return:

<ol>
  <li>Use the
    <code>inspect</code>
    errand to retrieve relevant information about the two VMs:
    <pre class="terminal">
  $ bosh -e my-env -d my-dep run-errand inspect
  [...]
  instance   mysql/4ecad54b-0704-47eb-8eef-eb228cab9724
  exit code  0
  stdout     -
  stderr     2017/12/11 18:25:54 started executing command: inspect
           2017/12/11 18:25:54 started get https<span>:</span>//127.0.0.1:8443/status
           2017/12/11 18:25:54
           has data: false
           read only: true
           gtid executed: 1d774323-de9e-11e7-be01-42010a001014:1-25
           replication configured: false<br /><br />
  instance   mysql/e0b94ade-0114-4d49-a929-ce1616d8beda
  exit code  0
  stdout     -
  stderr     2017/12/11 18:25:54 started executing command: inspect
           2017/12/11 18:25:54 started get https<span>:</span>//127.0.0.1:8443/status
           2017/12/11 18:25:54
           has data: true
           read only: true
           gtid executed: 1d774323-de9e-11e7-be01-42010a001014:1-25
           replication configured: true<br /><br />
  2 errand(s)<br />
  succeeded
  </pre>
    In the above scenario, the first instance is missing data but does not have replication configured. The second instance has data, and also has replication configured. The instructions below resolve this by copying data to the first instance, and
    resuming replication.</li>
  <li>Take a backup of the second instance using the
    <a href="backup-and-restore.html#manual-backup">Manual Backup</a>
    steps.</li>
  <li>Restore the backup artifact to the first instance using the
    <a href="backup-and-restore.html#restore">Manual Restore</a>
    steps.<br><br>
    At this point, the instances have equivalent data.</li>
  <li>
    Run the <code>configure-leader-follower</code> errand to reconfigure replication:
    <pre><code>bosh -e ENVIRONMENT -d DEPLOYMENT run-errand configure-leader-follower --instance=mysql/GUID-OF-LEADER</code></pre>
    For example:
    <pre class="terminal">$ bosh -e my-env -d my-dep \
    run-errand configure-leader-follower \
    --instance=mysql/4ecad54b-0704-47eb-8eef-eb228cab9724</pre>
  </li>
</ol>

###<a id="both-writable"></a>Both Leader and Follower Instances Are Writable (Errand Error)

This problem happens when the<code>configure-leader-follower</code>

errand fails because both VMs are writable and the VMs might hold differing data.
#### Symptom

The <code>configureâ€“leader-follower</code> errand exits with <code>1</code>
and the errand logs contain the following:

<pre class="terminal">
  $ both mysql instances are writable. please ensure no divergent data and set one instance to read-only mode.
</pre>

#### Explanation

MySQL for PCF tries to ensure that there is only one writable instance of the
leader-follower pair at any given time. However, in certain situations, such as
network partitions, or manual intervention outside of the provided bosh
errands, it is possible for both instances to be writable.
The service instances remain in this state until an operator resolves the issue
to ensure that the correct instance is promoted and reduce the potential for data divergence.

#### Solution

<ol>
  <li>
    Use the
    <code>inspect</code> errand to retrieve the GTID Executed set for each VM:

    <pre class="terminal">$ bosh -e my-env -d my-dep run-errand inspect
  [...]
  instance   mysql/4ecad54b-0704-47eb-8eef-eb228cab9724
  exit code  0
  stdout     -
  stderr     2017/12/11 18:25:54 started executing command: inspect
           2017/12/11 18:25:54 started get https<span>:</span>127.0.0.1:8443/status
           2017/12/11 18:25:54
           has data: true
           read only: false
           gtid executed: 1d774323-de9e-11e7-be01-42010a001014:1-23
           replication configured: false<br /><br />
  instance   mysql/e0b94ade-0114-4d49-a929-ce1616d8beda
  exit code  0
  stdout     -
  stderr     2017/12/11 18:25:54 started executing command: inspect
           2017/12/11 18:25:54 started get https<span>:</span>127.0.0.1:8443/status
           2017/12/11 18:25:54
           has data: true
           read only: false
           gtid executed: 1d774323-de9e-11e7-be01-42010a001014:1-25
           replication configured: false<br /><br />
  2 errand(s)<br />
  succeeded</pre>
    If the GTID Executed sets for both instances are the same, continue to Step 2. If they are different, continue to Step 4.</li>
  <li>Look at the value of GTID Executed for both instances.
    <ul>
      <li>If the range after the GUID is equivalent, either instance can be made read-only, as described in Step 3.</li>
      <li>If one instance has a range that is a subset of the other, the instance with the subset should must be made read-only, as described in Step 3.</li>
    </ul>
  </li>
  <li>Based on the information you gathered in the step above, run the
    <code>make-read-only</code>
    errand to make the appropriate instance read-only:
    <pre><code>bosh -e ENVIRONMENT -d DEPLOYMENT run-errand make-read-only --instance=mysql/MYSQL-SUBSET-INSTANCE</code></pre>
    For example:
    <pre class="terminal">$ bosh -e my-env -d my-dep \
        run-errand make-read-only \
        --instance=mysql/e0b94ade-0114-4d49-a929-ce1616d8beda
      [...]
      succeeded</pre>
  </li>
  <li>If the GTID Executed sets are neither equivalent nor subsets, data has diverged and you must determine what data has diverged as part of the procedure below:
    <ol>
      <li>Use the
        <code>make-read-only</code>
        errand to set both instances to read-only to prevent further data divergence.
        <pre><code>bosh -e ENVIRONMENT -d DEPLOYMENT run-errand make-read-only --instance=mysql/MYSQL-INSTANCE</code></pre>
        For example:
        <pre class="terminal">$ bosh -e my-env -d my-dep \
            run-errand make-read-only \
            --instance=mysql/e0b94ade-0114-4d49-a929-ce1616d8beda
            [...]
            succeeded</pre>
      </li>
      <li>Take a backup of both instances using the
        <a href="backup-and-restore.html#manual-backup">Manual Backup</a>
        steps.</li>
      <li>Manually inspect the data on each instance to determine the discrepancies and put the data on the instance that is further ahead---this instance has the higher GTID Executed set, and will be the new leader.</li>
      <li>Migrate all appropriate data to the new leader instance.</li>
      <li>After putting all data on the leader, ssh onto the follower:
        <pre><code>bosh -e ENVIRONMENT -d DEPLOYMENT ssh mysql/GUID-OF-FOLLOWER</code></pre>
        For example:
        <pre class="terminal">$ bosh -e my-env -d my-dep ssh mysql/e0b94ade-0114-4d49-a929-ce1616d8beda</pre>
      </li>
      <li>Become root with the command
        <code>sudo su</code>.<br></li>
      <li>Stop the mysql process with the command
        <code>monit stop mysql</code>.</li>
      <li>Delete the data directory of the follower with the command
        <code>rm -rf /var/vcap/store/mysql</code>.</li>
      <li>Start the mysql process with the command
        <code>monit start mysql</code>.</li>
      <li>Use the
        <code>configure-leader-follower</code>
        errand to copy the leader's data to the follower and resume replication:
        <pre><code>bosh -e ENVIRONMENT -d DEPLOYMENT run-errand configure-leader-follower --instance=mysql/GUID-OF-LEADER</code></pre>
        For example:
        <pre class="terminal">$ bosh -e my-env -d my-dep \
          run-errand configure-leader-follower \
          --instance=mysql/4ecad54b-0704-47eb-8eef-eb228cab9724</pre>
      </li>
    </ol>
  </li>
</ol>

###<a id="both-read-only"></a>Both Leader and Follower Instances Are Read-Only

In a leader-follower topology, the leader VM is writable and the follower VM is read-only.
However if both VMs are read only, apps cannot write to the database.

#### Symptom

Developers report that apps cannot write to the database.

#### Explanation

This problem happens if the leader VM fails and the BOSH Resurrector is enabled.
When the leader is resurrected, it is set as read-only.

#### Solution

<ol>
  <li>
    Use the
    <code>inspect</code>
    errand to confirm that both VMs are in a read-only state:
    <pre>bosh -e ENVIRONMENT -d DEPLOYMENT run-errand inspect</pre>
  </li>
  <li>Examine the output and locate the information about the leader-follower MySQL VMs:
    <pre class="terminal">
instance   mysql/4eexample54b-0704-47eb-8eef-eb2example724
exit code  0
stdout     -
stderr     2017/12/11 18:25:54 started executing command: inspect
         2017/12/11 18:25:54 started get https<span>:</span>999.0.0.1:8443/status
         2017/12/11 18:25:54
         has data: true
         read only: true
         gtid executed: 1d779999-de9e-11e7-be01-42010a009999:1-23
         replication configured: true<br /><br />
instance   mysql/e0exampleade-0114-4d49-a929-cexample8beda
exit code  0
stdout     -
stderr     2017/12/11 18:25:54 started executing command: inspect
         2017/12/11 18:25:54 started get https<span>:</span>999.0.0.1:8443/status
         2017/12/11 18:25:54
         has data: true
         read only: true
         gtid executed: 1d779999-de9e-11e7-be01-42010a009999:1-25
         replication configured: false<br /><br />
2 errand(s)<br />
succeeded
</pre>
  </li>
  <li>
    If Read Only is set to
    <code>true</code>
    for both VMs, make the leader writable using the following command:
    <pre>bosh -e ENVIRONMENT -d DEPLOYMENT run-errand configure-leader-follower --instance=mysql/GUID-OF-LEADER</pre>
    For example, if the second instance above is the leader:
    <pre class="terminal">
$ bosh -e my-env -d my-dep \
  run-errand configure-leader-follower \
  --instance=mysql/e0exampleade-0114-4d49-a929-cexample8beda
</pre>
  </li>
</ol>

###<a id="persistent-disk"></a>Persistent Disk is Full

If your persistent disk is full, apps become inoperable.
In this state, read, write, and Cloud Foundry Command-Line Interface (cf CLI) operations do not work.

#### Symptom

Developers report that read, write, and cf CLI operations do not work.
Developers cannot upgrade to a larger MySQL service plan to free up disk space.

#### Explanation

This problem happens if your persistent disk is full.
When you use the BOSH CLI to target your deployment, you see that instances are at 100% persistent disk usage.
<br><br>
Available disk space can be increased by deleting audit log files.
After deleting audit logs, you can then upgrade to a larger MySQL service plan.

#### Solution

The solution to this problem is to confirm that your persistent disk is full, and then
delete an audit log file to free up disk space. When the disk is no longer full,
the service instance can be upgraded to a larger plan to prevent the disk from becoming full again.<br><br>
Follow the steps below:

<ol>
  <li>
    To retrieve and record the GUID of your service instance, run the following command:
    <br>
    <pre>cf service SERVICE-INSTANCE-NAME --guid</pre>
    Where
    <code>SERVICE-INSTANCE-NAME</code>
    is the name of your service instance.
    <br><br>
    For example:
    <pre class="terminal">$ cf service my-service-instance --guid
    12345678-90ab-cdef-1234-567890abcdef</pre>
    If you do not know the name of your service instance, you can list service instances in the space with
    <code>cf services</code>.
  </li>

  <li>
    To confirm that your persistent disk usage is at 100%, run the following command:
    <br>
    <pre>bosh -d service-instance_SERVICE-INSTANCE-GUID instances --vitals</pre>
    Where
    <code>SERVICE-INSTANCE-GUID</code>
    is the GUID you recorded in the above step.<br><br>
    For example:
    <pre class="terminal">$bosh -d service-instance_12345678-90ab-cdef-1234-567890abcdef instances --vitals
  using environment 'https<span>:</span>//10.0.0.6:25555' as client 'admin'

  task 19243. done

  deployment 'service-instance_12345678-90ab-cdef-1234-567890abcdef'

  instance                                    process state  az  ips         vm created at                 uptime           load              cpu    cpu    cpu   cpu   memory        swap      system      ephemeral   persistent
                                                                                                                            (1m, 5m, 15m)     total  user   sys   wait  usage         usage     disk usage  disk usage  disk usage
  mysql/ca0ed8b5-7590-4cde-bba8-7ca2935f2bd0  running        z3  10.0.18.20  wed sep 12 22:01:44 utc 2018  35d 20h 54m 17s  0.02, 0.03, 0.00  -      10.2%  0.4%  0.2%  14% (1.1 gb)  0% (0 b)  54% (37i%)  11% (4i%)   7% (0i%)

  1 instances

  succeeded</pre>
  </li>
  <li>
    To retrieve and record the instance ID of your service instance, follow the
    procedure below that corresponds with your VM topology.
    <ul>
    <li>If you are using single node mysql VMs, to retrieve and record the
      instance ID, run the
    following command:
    <br>
    <pre>bosh -d service-instance_SERVICE-INSTANCE-GUID instances</pre>
    where <code>SERVICE-INSTANCE-GUID</code> is the GUID you recorded in
    step 1.<br>
    <br>
    for example:
    <pre class="terminal">$ bosh -d service-instance_12345678-90ab-cdef-1234-567890abcdef
  instances
  using environment '34.237.123.534' as client 'admin'

  task 204. done

  deployment 'service-instance_12345678-90ab-cdef-1234-567890abcdef'

  instance                                    process state  az  ips
  mysql/ca0ed8b5-7590-4cde-bba8-7ca2935f2bd0  running        z2  10.244.17.3

  1 instances

  succeeded </pre>

    The instance ID is the value for <code>Instance</code> after <code>mysql/</code>.
    <br><br>
    In the above output, the instance ID of the leader VM is <code>d15419ba-fc6c-4013-b056-19f91c6b0f1d</code>.
    <br><br>
  </li>
  <li>If you are using leader-follower MySQL VMs, to retrieve and record the leader instance ID, run the following command:
    <br>
    <pre>bosh -d service-instance_SERVICE-INSTANCE-GUID run-errand inspect</pre>
    Where
    <code>SERVICE-INSTANCE-GUID</code>
    is the GUID you recorded in the step 1.<br>
    <br>
    For example:
    <pre class="terminal">$ bosh -d service-instance_12345678-90ab-cdef-1234-567890abcdef run-errand inspect
  instance   mysql/ca0ed8b5-7590-4cde-bba8-7ca2935f2bd0
  exit code  0
  stdout     2018/04/03 18:08:46 started executing command: inspect
            2018/04/03 18:08:46
            ip address: 10.0.8.11
            role: leader
            read only: false
            replication configured: false
            replication mode: async
            has data: true
            gtid executed: 82ddc607-710a-404e-b1b8-a7e3ea7ec063:1-18
            2018/04/03 18:08:46 successfully executed command: inspect
  stderr     -
  <br>
  instance   mysql/37e4b6bc-2ed6-4bd2-84d1-e59a91f5e7f8
  exit code  0
  stdout     2018/04/03 18:08:46 started executing command: inspect
            2018/04/03 18:08:46
            ip address: 10.0.8.10
            role: follower
            read only: true
            replication configured: true
            replication mode: async
            has data: true
            gtid executed: 82ddc607-710a-404e-b1b8-a7e3ea7ec063:1-18
            2018/04/03 18:08:46 successfully executed command: inspect </pre>
    The leader instance ID is the value for <code>Instance</code> after <code>mysql/</code>
    corresponding with the instance marked <code>Role: leader</code>.
    <br><br>
    In the above output, the instance ID of the leader VM is
    <code>ca0ed8b5-7590-4cde-bba8-7ca2935f2bd0</code>.
  </li>
</ul>
</li>

<li>
To BOSH SSH into your service instances, run the following command:
<br>
<pre>bosh -d service-instance_SERVICE-INSTANCE-GUID ssh mysql/INSTANCE-ID</pre>
Where:
<br>
<ul>
  <li>
    <code>SERVICE-INSTANCE-GUID</code>
    is the GUID you recorded in step 1.</li>
  <li>
    <code>INSTANCE-ID</code>
    is the instance ID you recorded in the above step.
  </li>
</ul>
For example:
<pre class="terminal">$ bosh -d service-instance_12345678-90ab-cdef-1234-567890abcdef ssh mysql/ca0ed8b5-7590-4cde-bba8-7ca2935f2bd0
using environment 'https:<span>//10.0.0.6:25555</span>' as client 'admin'

using deployment 'service-instance_12345678-90ab-cdef-1234-567890abcdef'

task 19244. done</pre>

<li>
  To move to the directory where your audit log files are located, run the following command:
  <br>
  <pre>cd /var/vcap/store/mysql_audit_logs/mysql_server_audit.log</pre>
</li>
<li>
  Delete at least one audit log file with
  <code>rm</code>
</li>

  <li> Update your service instance to a larger plan. For more information,
    see <a href= "./use.html#update">Update a Service Instance to a Larger Plan</a>.
  </li>
</ol>

##  <a id="components"></a>  Troubleshooting Components

This section provides guidance on checking for and fixing issues in on-demand service components.

### <a id="bosh"></a> BOSH Problems

#### <a id="large-queue"></a> Large BOSH Queue


<!-- The below partial is in https://github.com/pivotal-cf/docs-partials -->

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-comp-large-queue' %>


### <a id="bosh-config"></a> Configuration

#### <a id="bosh-instance-fail"></a> Service instances in failing state

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-comp-bosh-instance-fail' %>


###  <a id="auth"></a>  Authentication

#### <a id="uaa-change"></a> UAA Changes

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-comp-uaa-change' %>


###  <a id="network"></a>  Networking


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-comp-network' %>


####  <a id="broker-to-instances"></a>  Validate Service Broker Connectivity to Service Instances


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-comp-broker-to-instances' %>


####  <a id="app-to-instances"></a>  Validate App Access to Service Instance


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-comp-app-to-instances' %>


###  <a id="quotas"></a>  Quotas

#### <a id="plan-quotas"></a> Plan Quota Issues

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-comp-plan-quotas' %>


####  <a id="global-quotas"></a>  Global Quota Issues

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-comp-global-quotas' %>


###  <a id="failing-jobs"></a>  Failing Jobs and Unhealthy Instances

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-comp-failing-jobs' %>

A failing process or failing VM might come back automatically after a temporary service outage. See
<a href="./interruptions.html#process-fail">VM Process Failure</a>
and <a href="./interruptions.html#vm-fail">VM Failure</a>.

###  <a id="az-region-fail"></a>  AZ or Region Failure

Failures at the IaaS level, such as Availability Zone (AZ) or region failures,
can interrupt service and require manual restoration.
See <a href="./interruptions.html#az-fail">AZ Failure</a> and <a href="./interruptions.html#region-fail">Region Failure</a>.

##  <a id="techniques"></a>  Techniques for Troubleshooting

Instructions on interacting with the on-demand service broker and on-demand service
instance BOSH deployments, and on performing general maintenance and housekeeping tasks

### <a id="parse-error"></a> Parse a Cloud Foundry (CF) Error Message

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-parse-error' %>


###  <a id="bosh-cf-access"></a>  Access Broker and Instance Logs and VMs


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-bosh-cf-access' %>


####  <a id="access-broker"></a>  Access Broker Logs and VM(s)


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-access-broker' %>


####  <a id="access-instance"></a>  Access Service Instance Logs and VMs


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-access-instance' %>

<a id="broker-errands"></a><h3>Run Service Broker Errands to Manage Brokers and Instances</h3>

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-broker-errands' %>

<a id="register-broker"></a><h4>Register Broker</h4>

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-register-broker' %>

<a id="deregister-broker"></a><h4>Deregister Broker</h4>

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-deregister-broker' %>

<a id="upgrade-all"></a><h4>Upgrade All Service Instances</h4>

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-upgrade-all' %>

<a id="delete-all"></a><h4>Delete All Service Instances</h4>

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-delete-all' %>

<a id="detect-orphans"></a><h3>Detect Orphaned Service Instances</h3>

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-detect-orphans' %>

<a id="instance-creds"></a><h3>Retrieve Admin and Read-Only Admin Credentials for a Service Instance</h3>

To retrieve the admin and read-only admin credentials for a service instance from BOSH CredHub, perform the following steps:

<ol>
  <li>Use the cf CLI to determine the GUID associated with the service instance
    for which you want to retrieve credentials. Run the following command:
    <pre><code>cf service service-instance --guid</code></pre>
    <br>
    Where <code>SERVICE-INSTANCE</code> is the name of the service instance.
    <br><br>
    For example:
    <pre class="terminal">$ cf service my-service-instance --guid
    12345678-90ab-cdef-1234-567890abcdef</pre>
    If you do not know the name of the service instance, you can list service instances in the space with
    <code>cf services</code>.
  </li>
  <li>Perform the steps in
    <a href="https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#gather">Gather Credential and IP Address Information</a>
    and
    <a href="https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#ssh">SSH into Ops Manager</a>
    of
    <em>Advanced Troubleshooting with the BOSH CLI to SSH into the Ops Manager VM</em>.
  </li>
  <li>From the Ops Manager VM, log in to your BOSH Director with the BOSH CLI. See
    <a href="https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#log-in">Log in to the BOSH Director</a>
    in
    <em>Advanced Troubleshooting with the BOSH CLI</em>.
  </li>
  <li>
    Follow the steps in
    <a href="prepare-tls.html#credhub-creds">Find the CredHub Credentials</a>, and record the values for
    <code>identity</code>
    and
    <code>password</code>.</li>
  <li>Set the API target of the CredHub CLI to your BOSH CredHub server.
    <br><br>
    Run the following command:
    <pre><code>credhub api https<span>:</span>//bosh-director:8844 --ca-cert=/var/tempest/workspaces/default/root_ca_certificate</code></pre>
    <br>
    Where
    <code>BOSH-DIRECTOR</code>
    is the IP address of the BOSH Director VM.
    <br><br>
    For example:
    <pre class="terminal">$ credhub api http<span>s:</span>//10.0.0.5:8844 --ca-cert=/var/tempest/workspaces/default/root_ca_certificate</pre>
  </li>
  <li>
    Log in to CredHub.
    <br><br>
    Run the following command:
    <pre><code>credhub login \
  --client-name=credhub-client-name \
  --client-secret=credhub-client-secret</code></pre>
    Where:
    <ul>
      <li>
        <code>CREDHUB-CLIENT-NAME</code>
        is the
        <code>identity</code>
        you recorded in
        <a href="prepare-tls.html#credhub-creds">Find the CredHub Credentials</a>.</li>
      <li>
        <code>CREDHUB-CLIENT-SECRET</code>
        is the
        <code>password</code>
        you recorded in
        <a href="prepare-tls.html#credhub-creds">Find the CredHub Credentials</a>.</li>
    </ul>
    For example:
    <pre class="terminal">$ credhub login \
      --client-name=credhub \
      --client-secret=abcdefghijklm123456789</pre>
  </li>
  <li>
    Use the CredHub CLI to retrieve the credentials.
    <ul>
      <li>
        To retrieve the password for the admin user, run the following command:
        <pre><code>credhub get -n /p-bosh/service-instance_guid/admin_password</code></pre>
        In the output, the password appears under
        <code>value</code>.</li>
      <br>
      <li>
        To retrieve the password for the read-only admin user, run the following command:
        <pre>credhub get -n /p-bosh/service-instance_guid/read_only_admin_password</pre>
        In the output, the password appears under
        <code>value</code>.</li>
    </ul>
    <br>
    For example:
    <pre class="terminal">$ credhub get -n /p-bosh/service-instance_70d30bb6-7f30-441a-a87c-05a5e4afff26/admin_password
  id: d6e5bd10-3b60-4a1a-9e01-c76da688b847
  name: /p-bosh/service-instance_70d30bb6-7f30-441a-a87c-05a5e4afff26/admin_password
  type: password
  value: umf2dxsqnpplcnwmdvmcnv7rc3wi10
  version_created_at: 2018-04-02t23:16:09z
</pre>
  </li>
</ol>


###  <a id="reinstall"></a>  Reinstall a Tile

To reinstall the MySQL for PCF tile, see <a href="https://community.pivotal.io/s/article/Reinstalling-MySQL-for-Pivotal-Cloud-Foundry-version-2-and-above">Reinstalling MySQL for Pivotal Cloud Foundry version 2 and above</a>
in the Pivotal Support knowledge base.

###  <a id="view-resources"></a>  View Resource Saturation and Scaling


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-view-resources' %>


###  <a id="id-instance-owner"></a>  Identify Service Instance Owner


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-id-instance-owner' %>


###  <a id="monitor-quota"></a>  Monitor Quota Saturation and Service Instance Count


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-tech-monitor-quota' %>

<a id="kb"></a><h2>Knowledge Base (Community)</h2>

<%= partial '../../p-mysql/partials/services-tshoot/tshoot-kb' %>


##  <a id="support"></a>  File a Support Ticket


<%= partial '../../p-mysql/partials/services-tshoot/tshoot-support' %>
