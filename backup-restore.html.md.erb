---
title: Backing up and Restoring VMware Tanzu SQL &#91;MySQL&#93;
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic describes how to back up and restore a <%= vars.product_full %> service instance.
Both operators and developers can use the procedures in this topic.

Operators can configure automated backups by following the procedures in
[Configuring Automated Backups](./automated-backup.html).

Additionally, developers can create logical backups using `mysqldump`.
For information, see [Backing Up and Restoring with mysqldump](./backup-mysqldump.html).

## <a id="overview"></a> Overview

You can back up and restore a <%= vars.product_short %> service instance using the
Cloud Foundry Command Line Interface (cf CLI).
The backup artifacts you create in this topic are physical backups.
The following procedures do not create logical backup artifacts.
Restoring a physical backup is faster than restoring a logical backup and
has less downtime. 

You might want to backup a service instance in the following use cases:

+ Disaster recovery
+ Troubleshooting
+ Testing
+ Preparation for potentially destructive operations (schema changes)
+ All nodes for l-f and HA are down ?

<p class="note"><strong>Note:</strong> VMware recommends
  that you always configure a single instance plan to streamline the backup and
  restore process for leader-follower and HA cluster plans.
</p>

## <a id="backup"></a> Back up a Service Instance

To back up a service instance:

1. Back up your service instance by running:

    ```
    cf adbr backup SERVICE-INSTANCE
    ```
1. View the status of the backup process by running:

    ```
    watch cf adbr get-status SERVICE-INSTANCE
    ```

    For example:

    <pre class="terminal">$ watch cf adbr get-status myDB
      Getting status of service instance myDB in org my-org / space my-space as user...
      [Mon May 18 18:08:25 UTC 2020] Status: Backup was successful. Uploaded 3.2M</pre>

## <a id="restore"></a> Restore a Service Instance

You can only restore single node, leader-follower, and HA cluster backup artifacts
to a single node service instance.
Operators must ensure that the persistent disk in the single node plan is at
least as large as the persistent disk of your largest leader-follower.

For information about persistent disk sizing recommendations,
see <a href="recommended.html#persistent"> Persistent Disk Usage</a>.

To restore a service instance:

1. Create a new service instance to restore to by running:

    ```
    cf create-service p.mysql SINGLE-NODE-PLAN DESTINATION-INSTANCE
    ```
    Where `DESTINATION-INSTANCE` is the service instance that
    you are restoring the backup artifact to.

1. View the available backup artifacts for your service instance by running:

    ```
    cf adbr list-backups SERVICE-INSTANCE
    ```

    For example:
    <pre class="terminal">$ cf adbr list-backups myDB
      Getting backups of service instance myDB in org my-org / space my-space as user...
      Backup ID                                         Time of Backup
      a41bf723-2538-4020-9d16-50cccb7b7c8d_1589825284   Mon May 18 18:08:04 UTC 2020</pre>

      Record the `Backup ID` from the above output.

1. Restore the service instance by running:

    ```
    cf adbr restore BACKUP-ID DESTINATION-INSTANCE
    ```
    Where is `BACKUP-ID` is the ID you recorded in the above step. <br><br>

    For example:

    <pre class="terminal">$ cf adbr restore a41bf723-2538-4020-9d16-50cccb7b7c8d_1589825284  myTargetDB</pre>

1. View the status of the restore process by running:

    ```
    watch cf adbr get-status DESTINATION-INSTANCE
    ```

    For example:

    <pre class="terminal">$ watch cf adbr get-status myTargetDB
      Getting status of service instance myTargetDB in org my-org / space my-space as user...
      [Mon May 18 18:08:25 UTC 2020] Status: </pre>

1. If you are restoring a leader-follower or HA cluster service instance,
    update the plan by running:

    ```
    cf update-service DESTINATION-INSTANCE -p PLAN
    ```
    Where `PLAN` is the plan for the topology you want to restore.

1. Determine if your app is bound to a service instance by running:

    ```
    cf services
    ```

    For example:
    <pre class="terminal">$ cf services
    Getting services in org my-org / space my-space as user...
    OK
    name          service     plan        bound apps    last operation
    myDB          p.mysql     db-small    my-app        create succeeded
    myTargetDB    p.mysql     db-small                  create succeeded
    </pre>

1. If an app is currently bound to a service instance, unbind it by running:

    ```
    cf unbind-service APP-NAME OLD-INSTANCE-NAME
    ```

    Where `OLD-INSTANCE-NAME` is the instance you backed up in
    [Back up a Service Instance](#backup) above.

    <%= partial vars.path_to_partials + "/mysql/rebind-warning" %>

1. Update your app to bind to the new service instance by running:

    ```
    cf bind-service APP-NAME DESTINATION-INSTANCE
    ```

1. Restage your app by running:

    ```
    cf restage APP-NAME
    ```
