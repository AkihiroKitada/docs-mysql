---
title: Upgrading MySQL for PCF
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic explains how to upgrade the MySQL for Pivotal Cloud Foundry (PCF) service and existing service instances.
It also explains the service interruptions that can result from service changes and upgrades and from failures at the process, VM, and IaaS level.


## <a id="prereg"></a>Prerequisites

Before you upgrade MySQL for PCF you complete the procedures in [Remove Bindings with IP Addresses](#deprecated-bindings).


## <a id="deprecated-bindings"></a>Remove Bindings with IP Addresses

Before you upgrade your MySQL for PCF service, you must remove all bindings that use IP addresses. This is because for MySQL for PCF v2.5 and later you must use BOSH DNS for bindings. If you do not remove these bindings your upgrade fails. 

### <a id="check-bindings"></a> Check for Bindings with IP Addresses

To check if your app or service key bindings uses IP addresses, do the following:

1. To record the BOSH deployment name for your MySQL service broker, run the following command:

    ```
  bosh deployments
    ```

1. To search for bindings that use IP addresses, run the following command:

    ```
    bosh -d pivotal-mysql-GUID run-errand find-deprecated-bindings
    ```
    
    Where `pivotal-mysql-GUID` is the BOSH deployment name for your MySQL service broker.
  <br>
    For example:
    
    <pre class="terminal">$ bosh -d pivotal-mysql-e3ddd36247fe5b923caf run-errand find-deprecated-bindings</pre>
    
1. Check the `REASON` column in the output table for `no dns`. If it appears, do the procedures in [Remove Deprecated Bindings](#remove-bindings).

### <a id="remove-bindings"></a> Remove Deprecated Bindings

Some of the following steps require coordination with your app developers.
To remove deprecated bindings, you must do the following:

1. Upgrade your service instances to be compatible with BOSH DNS. See [Upgrade Service Instance](#upgrade-bindings).
1. Replace deprecated service bindings to use BOSH DNS. See [Replace Deprecated Bindings](#replace-bindings).
1. Redeploy MySQL for PCF to reconnect apps. See [Redeploy MySQL for PCF](#redeploy-bindings).

#### <a id="upgrade-bindings"></a> Upgrade Service Instances

To upgrade your service instances, operators must do the following:

1. Notify the developers who own the apps listed in the error output table above that you will be upgrading all service instances, which can impact app connectivity to the database.
1. To log in to the BOSH Director, do the procedure in [Log in to the BOSH Director VM](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#log-in).
1. To locate the BOSH deployment name for your MySQL service broker, run the following command:

    ```
    bosh deployments
    ```
1. Record the BOSH deployment name for the MySQL service broker, which looks like `pivotal-mysql-GUID`.
1. To upgrade all service instances, run the following command:

    ```
    bosh -d pivotal-mysql-GUID run-errand upgrade-all-service-instances
    ```

    Where `pivotal-mysql-GUID` is the value you recorded in the previous step.

1. Notify your developers that at this time, they will see that apps that do hostname validation cannot establish a TLS connection to the database. These apps will output an error similar the following example:

    <pre class="terminal">
    failed to perform TLS handshake with host "10.0.8.5:3306": x509: certificate is valid for 127.0.0.1, not 10.0.8.5
    </pre>

#### <a id="replace-bindings"></a> Replace Deprecated Bindings

To replace your deprecated service bindings with new service bindings that use DNS hostnames, developers must do the following for each binding listed in the log error above:

1. To unbind your app from your service instance, run the following command:

    ```
    cf unbind-service APP-NAME SERVICE-INSTANCE
    ```
1. To re-bind your app to your service instance, run the following command:

    ```
    cf bind-service APP-NAME SERVICE-INSTANCE
    ```
1. To restart your app, run the following command:

     ```
     cf restart APP-NAME
     ```

#### <a id="redeploy-bindings"></a> Redeploy MySQL for PCF

After you restart all of your apps, your apps can connect to the database and resume service. However, your Ops Manager installation is still in a failed state. To finish the installation, operators must complete the following steps:

1. To ensure that all deprecated service bindings have been replaced, run the following errand:

    ```
    bosh -d pivotal-mysql-GUID run-errand find-deprecated-bindings
    ```
    
1. Ensure that `no dns` does not appear in the `REASON` column in the output table.

1. In the Ops Manager Installation Dashboard, click **Review Pending Changes**.

1. In the **Review Pending Changes** pane, ensure that the **Validate no IP-based bindings in use before upgrade-all-service-instances** and **Upgrade all On-demand MySQL Service Instances** errands are selected.

1. After reviewing the pending changes, click **Apply Changes** to complete the installation.

## <a id="update-addons"></a>Update Add-ons to Run with Xenial Stemcell

MySQL for PCF v2.4 and later requires a Xenial stemcell.
If you are using any of the following BOSH add-ons with your PCF deployment,
you must update the add-on definition to include the Xenial stemcell before you deploy MySQL for PCF v2.5:

+ File Integrity Monitoring for PCF Add-on. For update instructions, see [Updating FIM Add-on for PCF to Run with Xenial Stemcells](https://docs.pivotal.io/addon-fim/updating-for-xenial.html).
+ ClamAV for PCF Add-on. For update instructions, see [Updating ClamAV Add-on for PCF to Run with Xenial Stemcells](https://docs.pivotal.io/addon-antivirus/updating-for-xenial.html).
+ IPsec for PCF Add-on. For update instructions, see [Updating IPsec Add-on for PCF to Run with Xenial Stemcells](https://docs.pivotal.io/addon-ipsec/updating-for-xenial.html).


## <a id="upgrade-service"></a>Upgrade MySQL for PCF

<p class="note"><strong>Note:</strong>  Before upgrading to the next version of MySQL for PCF,
run the <code>upgrade-all-service-instances</code> errand to make sure that
all your service instances are upgraded to your current version.<br>
For more information, see <a href="./troubleshoot.html#upgrade-all">Upgrade All Service Instances</a>.</p>

To upgrade the MySQL for PCF service, you follow the same Ops Manager process that you use to install the service for the first time.
Your configuration settings migrate to the new version automatically. To perform an upgrade:

1. Review the [Release Notes](./release-notes.html) for the version you are upgrading to.

1. Download the Ubuntu Xenial stemcell from [Pivotal Network](https://network.pivotal.io/products/stemcells-ubuntu-xenial),
and import it into the Ops Manager Stemcell Library. For instructions, see [Verify Stemcell Version and Apply All Changes](./install-config.html#stemcell).

1. Download the desired version of the product from [Pivotal Network](https://network.pivotal.io/products/p-mysql).

1. Navigate to the Ops Manager Installation Dashboard and click **Import a Product** to upload the product file.

1. Under the **Import a Product** button, click **+** next to **MySQL for PCF**. This adds the tile to your staging area.

1. Click the newly-added **MySQL for PCF** tile to review its configuration panes. Click **Save** on any panes where you make changes.

1. Return to the Ops Manager Dashboard and do the following to complete the installation:

    1. If you are using Ops Manager v2.3 or later, click **Review Pending Changes**.
    For more information about this Ops Manager page, see
    [Reviewing Pending Product Changes](https://docs.pivotal.io/pivotalcf/customizing/review-pending-changes.html).<br><br>
    1. Click **Apply Changes**.

Upgrading the MySQL for PCF service and service instances can temporarily interrupt
the service.
For more information, see [Service Interruptions](#interruptions) below.

## <a id="upgrade-instances"></a>Upgrade MySQL Instances

After upgrading the MySQL for PCF service, operators must upgrade existing service instances
to be in sync with the new version of the service.
Developers cannot create new bindings to a service instance that has not been upgraded.

To upgrade existing service instances, operators run the following command:

```
bosh -d BROKER-NAME run-errand upgrade-all-service-instances
```

Where `BROKER-NAME` is the deployment name of the broker.

For more information about the `upgrade-all-service-instances` errand, see [upgrade-all-service-instances](./errands.html#upgrade-all-service-instances).
	
## <a id="interruptions"></a>Service Interruptions

Service changes and upgrades and failures at the process, VM, and IaaS level can cause outages in the MySQL for PCF service, as described below.

Read this section if:

+ You are experiencing a service interruption and are wondering why.
+ You are planning to update or change a service instance and want to know if it might cause a service interruption.

### <a id='service-update'></a>Stemcell or Service Update

An operator updates a stemcell version or their version of MySQL for PCF.

- <strong>Impact:</strong> Apps lose access to the MySQL service while PCF updates the service instance they are bound to.
          The service should resume within 10–15 minutes.
- <strong>Required Actions:</strong> None. If the update deploys successfully, apps reconnect automatically.

### <a id='change-plan'></a>Plan Change

A developer changes their service instance to provide a different service plan, using `cf update-service` or Apps Manager.

- <strong>Impact:</strong> Apps lose access to the MySQL service while PCF updates the service instance they are bound to.
          The service should resume within 10–15 minutes.
- <strong>Required Actions:</strong> None. If the plan change deploys successfully, apps reconnect automatically.
